{"version":3,"sources":["components/contexts/StampsContext.contexts.tsx","components/AddText.tsx","components/ListStamps.tsx","lib/stamps.utils.ts","lib/localStorge.utils.ts","components/hooks/localStorage.hook.ts","icons/file_upload_white_24dp.svg","components/InputFile.tsx","icons/file_download_white_24dp.svg","components/DownloadFile.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["StampsContext","createContext","AddText","Consumer","onAddStamp","onTextInput","textValue","className","value","id","name","placeholder","onInput","e","onClick","ListStamps","stamps","length","sort","a","b","created_at","map","note","i","ts","key","values","ListItem","formattedTimeStamp","Date","toJSON","split","day","time","replace","featureAvailable","localStorage","setItem","getItem","removeItem","exists","useLocalList","push","JSON","parse","stringify","append","fetch","data","get","console","error","message","clear","remove","addAtBeginning","_values","unshift","InputFile","props","onFileRead","actions","htmlFor","style","cursor","src","uploadIcon","alt","type","accept","onChange","file","currentTarget","files","reader","FileReader","onload","target","result","log","readAsText","display","DownloadFile","href","encodeURIComponent","download","toLocaleDateString","downloadFile","App","addStamp","fetchStamps","clearStamps","useState","setTextValue","setStamps","Provider","stamp","serial","dts","now","guid","updated_at","createStamp","mergedLifeStamps","stampsA","stampsB","obj","reduce","Object","merge","forEach","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f475ed69.chunk.js","sourcesContent":["import {createContext, FormEvent, SyntheticEvent} from \"react\";\nimport {LifeStamp} from \"../../lib/stamps.utils\";\n\ntype LifeStampContextT = {\n    stamps: LifeStamp[],\n    onTextInput: (e: FormEvent<HTMLTextAreaElement>) => void,\n    onAddStamp: (e: SyntheticEvent<HTMLButtonElement, Event>) => void,\n    textValue: string\n}\nconst StampsContext = createContext({} as LifeStampContextT);\n\nexport {StampsContext};\nexport type {LifeStampContextT};\n","import React from \"react\";\nimport {StampsContext} from \"./contexts/StampsContext.contexts\";\n\nexport default function AddText() {\n    return (\n        <StampsContext.Consumer>\n            {({onAddStamp, onTextInput, textValue}) => {\n                return (\n                    <div className=\"add-text-container\">\n                        <textarea\n                            value={textValue}\n                            id=\"add-text\"\n                            name=\"add-text\"\n                            placeholder=\"enter text here\"\n                            onInput={(e) => onTextInput(e)}\n                        />\n                        <button id=\"add-text-btn\" onClick={onAddStamp}>+</button>\n                    </div>\n                );\n            }}\n        </StampsContext.Consumer>\n    );\n}\n","import React from \"react\";\nimport {LifeStamp} from \"../lib/stamps.utils\";\nimport {StampsContext} from './contexts/StampsContext.contexts';\nimport ReactMarkdown from 'react-markdown';\n\nexport default function ListStamps() {\n\n    return (\n        <StampsContext.Consumer>\n            {\n                ({stamps}) => {\n                    return <div className=\"stamps\">\n                        {\n                            stamps &&\n                            stamps.length > 0 &&\n                            stamps\n                                .sort((a, b) => b.created_at - a.created_at)\n                                .map((note: LifeStamp, i: number) => ({\n                                    note: note.note,\n                                    ts: note.ts,\n                                    key: `list-item-${i}`\n                                }))\n                                .map((values: ListItemT) => <ListItem {...values} />)\n                        }\n                    </div>;\n                }\n            }\n        </StampsContext.Consumer>\n    );\n}\n\ntype ListItemT = {\n    note: string;\n    ts: string;\n    key: string;\n}\n\nfunction ListItem({note, ts, key}: ListItemT) {\n    return <div className=\"stamp\" key={key}>\n        <div className=\"ts\">\n            {ts}\n        </div>\n        <div className=\"note\">\n            <ReactMarkdown>{note}</ReactMarkdown>\n        </div>\n    </div>;\n}","import {v4 as guid} from 'uuid';\n\nexport type LifeStamp = {\n    note: string,\n    ts: string,\n    id: string,\n    created_at: number;\n    updated_at: number;\n    serial: number;\n    type: string;\n}\n\nfunction formattedTimeStamp() {\n    const d = new Date().toJSON();\n    const [day, timeString] = d.split('T');\n    const time = timeString.split('.')[0];\n    return `${day.replace(/-/g, '.')} ${time}`;\n}\n\nexport default function createStamp(note: string, serial: number): LifeStamp {\n    const dts: number = Date.now();\n    return {note, ts: formattedTimeStamp(), id: guid(), created_at: dts, updated_at: dts, serial, type: 'LifeStamp'};\n}\n\nfunction merge<T extends LifeStamp>(stampsA: T[], stampsB: T[]) {\n    let obj = stampsA.reduce((a: Object, stamp: T) => {\n        a = {...a, [`${stamp.id}`]: stamp};\n        return a;\n    }, {});\n    obj = stampsB.reduce((a: Object, stamp: T) => {\n        a = {...a, [`${stamp.id}`]: stamp};\n        return a;\n    }, obj);\n    const merged = Object.values(obj);\n    return merged;\n}\n\nexport {merge};\n","function featureAvailable() {\n    if (typeof localStorage !== 'undefined') {\n        try {\n            localStorage.setItem('feature_test', 'yes');\n            if (localStorage.getItem('feature_test') === 'yes') {\n                localStorage.removeItem('feature_test');\n                // localStorage is enabled\n                return true;\n            } else {\n                // localStorage is disabled\n                return false;\n            }\n        } catch (e) {\n            // localStorage is disabled\n            return false;\n        }\n    } else {\n        // localStorage is not available\n        return false;\n    }\n}\n\nfunction exists(key: string) {\n    if (featureAvailable()) {\n        return localStorage.getItem(key) !== null;\n    }\n}\n\nfunction unshift<T>(key: string, value: T) {\n    if (featureAvailable()) {\n        if (exists(key)) {\n            const _values = localStorage.getItem(key);\n            if (_values) {\n                let values = JSON.parse(_values as string);\n                values.unshift(value);\n                localStorage.setItem(key, JSON.stringify(values));\n                return;\n            }\n        }\n        const values = [value];\n        localStorage.setItem(key, JSON.stringify(values));\n    }\n}\n\nfunction append<T>(key: string, value: T) {\n    if (featureAvailable()) {\n        if (exists(key)) {\n            let values = JSON.parse(localStorage.getItem(key) as string);\n            values.push(value);\n            localStorage.setItem(key, JSON.stringify(values));\n        } else {\n            const values = [value];\n            localStorage.setItem(key, JSON.stringify(values));\n        }\n    }\n}\n\nfunction set(key: string, value: string) {\n    if (featureAvailable()) {\n        localStorage.setItem(key, value);\n    }\n}\n\nfunction get(key: string) {\n    return featureAvailable() ? localStorage.getItem(key) : 'no localStorage';\n}\n\nfunction remove(key: string) {\n    if (featureAvailable() && exists(key)) {\n        localStorage.removeItem(key);\n    }\n}\n\nexport {exists, featureAvailable, get, set, append, remove, unshift};\n","import {append, get, remove, unshift} from \"../../lib/localStorge.utils\";\n\nexport default function useLocalList<T>(key: string) {\n    function push(value: T) {\n        append<T>(key, value);\n    }\n\n    function addAtBeginning<T>(value: T) {\n        unshift<T>(key, value);\n    }\n\n    function fetch<T>(): T[] {\n        let data: T[] = [];\n        try {\n            data = JSON.parse(get(key) as string || '') || [] as T[];\n        } catch (e: any) {\n            console.error(e?.message);\n        } finally {\n            return data;\n        }\n    }\n\n    function clear() {\n        remove(key);\n    }\n\n    return {push, fetch, clear, addAtBeginning};\n}\n","export default __webpack_public_path__ + \"static/media/file_upload_white_24dp.efa74fb3.svg\";","import React, {SyntheticEvent} from \"react\";\n\nimport uploadIcon from '../icons/file_upload_white_24dp.svg';\n\nexport default function InputFile(props: any) {\n    const {onFileRead} = props.actions;\n\n    function onFile(e: SyntheticEvent<HTMLInputElement>) {\n        const file = e?.currentTarget?.files?.[0];\n        const reader = new FileReader();\n        reader.onload = function (e) {\n            const data = JSON.parse(e!.target!.result as string);\n            onFileRead(data);\n            console.log(data);\n        };\n        reader.readAsText(file!, 'utf-8');\n    }\n\n    return (\n        <label htmlFor=\"upload\" style={{cursor: 'pointer'}} className=\"upload-control\">\n            <img src={uploadIcon} alt=\"upload previously downloaded json.\"/>\n            <input\n                type=\"file\"\n                id=\"upload\"\n                name=\"upload\"\n                accept=\"application/json\"\n                onChange={onFile}\n                style={{display: 'none'}}\n            />\n        </label>\n\n    );\n}\n","export default __webpack_public_path__ + \"static/media/file_download_white_24dp.e46f4fb0.svg\";","import React from 'react';\nimport downloadFile from \"../icons/file_download_white_24dp.svg\";\nimport {StampsContext} from \"./contexts/StampsContext.contexts\";\n\nexport default function DownloadFile() {\n    return <StampsContext.Consumer>\n        {({stamps}) => <>{\n            stamps.length > 0 &&\n            <a\n                href={`data:text/json;charset=utf-8,${encodeURIComponent(JSON.stringify(stamps, null, 4))}`}\n                download={`lifestamps-${new Date().toLocaleDateString()}.json`}\n                className=\"download-control\"\n            >\n                <img src={downloadFile} alt=\"download your lifestamps as json\"/>\n            </a>\n        }\n        </>\n        }\n    </StampsContext.Consumer>;\n}","import React, {FormEvent, SyntheticEvent, useState} from 'react';\nimport './App.css';\nimport AddText from \"./components/AddText\";\nimport ListStamps from \"./components/ListStamps\";\nimport createStamp, {LifeStamp, merge} from \"./lib/stamps.utils\";\nimport useLocalList from \"./components/hooks/localStorage.hook\";\nimport InputFile from \"./components/InputFile\";\nimport DownloadFile from \"./components/DownloadFile\";\nimport {StampsContext} from './components/contexts/StampsContext.contexts';\n\nfunction App() {\n    const {addAtBeginning: addStamp, fetch: fetchStamps, clear: clearStamps} = useLocalList('LIFESTAMPS');\n    const [textValue, setTextValue] = useState('');\n    const [stamps, setStamps] = useState(fetchStamps<LifeStamp>());\n\n    function onTextInput(e: FormEvent<HTMLTextAreaElement>) {\n        setTextValue(e.currentTarget.value);\n    }\n\n    function onAddStamp(e: SyntheticEvent<HTMLButtonElement>) {\n        if (textValue) {\n            const stamp = createStamp(textValue, stamps.length + 1);\n            setStamps([stamp, ...stamps]);\n            addStamp(stamp);\n            setTextValue('');\n        }\n    }\n\n    function onFileRead(data: LifeStamp[]) {\n        const mergedLifeStamps = merge(stamps, data);\n        clearStamps();\n        mergedLifeStamps.forEach((stamp: string) => addStamp(stamp));\n        setStamps(mergedLifeStamps);\n    }\n\n    return (\n        <div className=\"App\">\n            <StampsContext.Provider value={{\n                stamps,\n                onAddStamp,\n                onTextInput,\n                textValue\n            }}>\n                <header className=\"header\">\n                    <h2 className=\"brand\"><a href=\"/lifestamps\">LifeStamps</a></h2>\n                </header>\n                <section className=\"content\">\n                    <AddText/>\n                    <ListStamps/>\n                </section>\n                <footer className=\"footer\">\n                    <div className=\"controls\">\n                        <>JSON: (you can download and upload your data)</>\n                        <DownloadFile />\n                        <InputFile actions={{onFileRead}}/>\n                    </div>\n                    <div>&nbsp;</div>\n                    <h6>lifestamps by anubhav | 0.17.0-83</h6>\n                </footer>\n            </StampsContext.Provider>\n        </div>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}