{"version":3,"sources":["components/AddText.tsx","components/ListTimeStamps.tsx","lib/stamps.utils.ts","lib/localStorge.utils.ts","components/hooks/localStorage.hook.ts","icons/file_upload_white_24dp.svg","components/InputFile.tsx","icons/file_download_white_24dp.svg","App.tsx","reportWebVitals.ts","index.tsx"],"names":["AddText","props","btnActions","inputActions","value","className","id","name","placeholder","onInput","onClick","onSubmit","ListTimeStamps","list","length","map","i","note","ts","formattedTimeStamp","Date","toJSON","split","day","time","replace","featureAvailable","localStorage","setItem","getItem","removeItem","e","exists","key","useLocalList","push","values","JSON","parse","stringify","append","fetch","data","get","console","error","message","clear","remove","addAtBeginning","_values","unshift","InputFile","onFileRead","actions","htmlFor","style","cursor","src","uploadIcon","type","accept","onChange","file","currentTarget","files","reader","FileReader","onload","target","result","log","readAsText","visibility","App","addStamp","fetchStamps","clearStamps","useState","newText","setNewText","stamps","setStamps","href","stamp","serial","dts","now","guid","created_at","updated_at","createStamp","title","encodeURIComponent","download","toLocaleDateString","downloadFile","alt","mergedLifeStamps","stampsA","stampsB","obj","reduce","a","Object","merge","forEach","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.493be454.chunk.js","sourcesContent":["import React from \"react\";\n\nexport default function AddText(props: any) {\n    const {btnActions, inputActions, value} = props;\n    return (\n        <div className='add-text-container'>\n            <textarea value={value} id=\"add-text\" name=\"add-text\" placeholder=\"enter text here\"\n                   onInput={inputActions.onInput}/>\n            <button id=\"add-text-btn\" onClick={btnActions.onSubmit}>+</button>\n        </div>\n    );\n}\n","import React from \"react\";\nimport {LifeStamp} from \"../lib/stamps.utils\";\n\nexport default function ListTimeStamps(props: any) {\n    const {list} = props;\n    return (\n        <div className=\"stamps\">\n            {list && list.length > 0 && list.map(({note, ts}: LifeStamp, i: number) => {\n                return (<div className=\"stamp\" key={`list-item-${i}`}>\n                    <div className=\"ts\">\n                        {ts}\n                    </div>\n                    <div className=\"note\">\n                        {note}\n                    </div>\n                </div>);\n            })}\n        </div>\n    );\n}","import {v4 as guid} from 'uuid';\n\nexport type LifeStamp = {\n    note: string,\n    ts: string,\n    id: string,\n    created_at: number;\n    updated_at: number;\n    serial: number;\n    type: string;\n}\n\nfunction formattedTimeStamp() {\n    const d = new Date().toJSON();\n    const [day, timeString] = d.split('T');\n    const time = timeString.split('.')[0];\n    return `${day.replace(/-/g, '.')} ${time}`;\n}\n\nexport default function createStamp(note: string, serial: number): LifeStamp {\n    const dts: number = Date.now();\n    return {note, ts: formattedTimeStamp(), id: guid(), created_at: dts, updated_at: dts, serial, type: 'LifeStamp'};\n}\n\nfunction merge<T extends LifeStamp>(stampsA: T[], stampsB: T[]) {\n    let obj = stampsA.reduce((a: Object, stamp: T) => {\n        a = {...a, [`${stamp.id}`]: stamp};\n        return a;\n    }, {});\n    obj = stampsB.reduce((a: Object, stamp: T) => {\n        a = {...a, [`${stamp.id}`]: stamp};\n        return a;\n    }, obj);\n    const merged = Object.values(obj);\n    return merged;\n}\n\nexport {merge};\n","function featureAvailable() {\n    if (typeof localStorage !== 'undefined') {\n        try {\n            localStorage.setItem('feature_test', 'yes');\n            if (localStorage.getItem('feature_test') === 'yes') {\n                localStorage.removeItem('feature_test');\n                // localStorage is enabled\n                return true;\n            } else {\n                // localStorage is disabled\n                return false;\n            }\n        } catch (e) {\n            // localStorage is disabled\n            return false;\n        }\n    } else {\n        // localStorage is not available\n        return false;\n    }\n}\n\nfunction exists(key: string) {\n    if (featureAvailable()) {\n        return localStorage.getItem(key) !== null;\n    }\n}\n\nfunction unshift<T>(key: string, value: T) {\n    if (featureAvailable()) {\n        if (exists(key)) {\n            const _values = localStorage.getItem(key);\n            if (_values) {\n                let values = JSON.parse(_values as string);\n                values.unshift(value);\n                localStorage.setItem(key, JSON.stringify(values));\n                return;\n            }\n        }\n        const values = [value];\n        localStorage.setItem(key, JSON.stringify(values));\n    }\n}\n\nfunction append<T>(key: string, value: T) {\n    if (featureAvailable()) {\n        if (exists(key)) {\n            let values = JSON.parse(localStorage.getItem(key) as string);\n            values.push(value);\n            localStorage.setItem(key, JSON.stringify(values));\n        } else {\n            const values = [value];\n            localStorage.setItem(key, JSON.stringify(values));\n        }\n    }\n}\n\nfunction set(key: string, value: string) {\n    if (featureAvailable()) {\n        localStorage.setItem(key, value);\n    }\n}\n\nfunction get(key: string) {\n    return featureAvailable() ? localStorage.getItem(key) : 'no localStorage';\n}\n\nfunction remove(key: string) {\n    if (featureAvailable() && exists(key)) {\n        localStorage.removeItem(key);\n    }\n}\n\nexport {exists, featureAvailable, get, set, append, remove, unshift};\n","import {append, get, remove, unshift} from \"../../lib/localStorge.utils\";\n\nexport default function useLocalList<T>(key: string) {\n    function push(value: T) {\n        append<T>(key, value);\n    }\n\n    function addAtBeginning<T>(value: T) {\n        unshift<T>(key, value);\n    }\n\n    function fetch<T>(): T[] {\n        let data: T[] = [];\n        try {\n            data = JSON.parse(get(key) as string || '') || [] as T[];\n        } catch (e: any) {\n            console.error(e?.message);\n        } finally {\n            return data;\n        }\n    }\n\n    function clear() {\n        remove(key);\n    }\n\n    return {push, fetch, clear, addAtBeginning};\n}\n","export default __webpack_public_path__ + \"static/media/file_upload_white_24dp.efa74fb3.svg\";","import React, {SyntheticEvent} from \"react\";\n\nimport uploadIcon from '../icons/file_upload_white_24dp.svg';\n\nexport default function InputFile(props: any) {\n    const {onFileRead} = props.actions;\n\n    function onFile(e: SyntheticEvent<HTMLInputElement>) {\n        const file = e?.currentTarget?.files?.[0];\n        const reader = new FileReader();\n        reader.onload = function (e) {\n            const data = JSON.parse(e!.target!.result as string);\n            onFileRead(data);\n            console.log(data);\n        };\n        reader.readAsText(file!, 'utf-8');\n    }\n\n    return (\n        <label htmlFor=\"upload\" style={{cursor: 'pointer'}}>\n            <img src={uploadIcon}/> upload json\n            <input type=\"file\" id=\"upload\" name=\"upload\" accept=\"application/json\" onChange={onFile}\n                   style={{visibility: 'hidden'}}/>\n        </label>\n\n    );\n}\n","export default __webpack_public_path__ + \"static/media/file_download_white_24dp.e46f4fb0.svg\";","import React, {SyntheticEvent, useState} from 'react';\nimport './App.css';\nimport AddText from \"./components/AddText\";\nimport ListTimeStamps from \"./components/ListTimeStamps\";\nimport createStamp, {LifeStamp, merge} from \"./lib/stamps.utils\";\nimport useLocalList from \"./components/hooks/localStorage.hook\";\nimport InputFile from \"./components/InputFile\";\nimport downloadFile from \"./icons/file_download_white_24dp.svg\";\n\nfunction App() {\n    const {addAtBeginning: addStamp, fetch: fetchStamps, clear: clearStamps} = useLocalList('LIFESTAMPS');\n    const [newText, setNewText] = useState('');\n    const [stamps, setStamps] = useState(fetchStamps<LifeStamp>());\n\n    function onInput(e: SyntheticEvent<HTMLInputElement>) {\n        setNewText(e.currentTarget.value);\n    }\n\n    function onSubmit(e: SyntheticEvent<HTMLButtonElement>) {\n        if (newText) {\n            const stamp = createStamp(newText, stamps.length + 1);\n            setStamps([stamp, ...stamps]);\n            addStamp(stamp);\n            setNewText('');\n        }\n    }\n\n    function onFileRead(data: LifeStamp[]) {\n        const mergedLifeStamps = merge(stamps, data);\n        clearStamps();\n        mergedLifeStamps.forEach((stamp: string) => addStamp(stamp));\n        setStamps(mergedLifeStamps);\n    }\n\n    return (\n        <div className=\"App\">\n            <header className=\"header\">\n                <h2 className=\"brand\"><a href=\"/lifestamps\">LifeStamps</a></h2>\n            </header>\n            <section className=\"content\">\n                <AddText value={newText} btnActions={{onSubmit}} inputActions={{onInput}}/>\n                <ListTimeStamps list={stamps}/>\n            </section>\n            <footer className=\"footer\">\n                <div className=\"controls\">\n                    <div id=\"download-control\" className=\"footer-control\" title=\"download your lifestamps as json\">\n\n                        {stamps.length > 0 &&\n                        <>\n                            <a href={`data:text/json;charset=utf-8,${encodeURIComponent(JSON.stringify(stamps, null, 4))}`}\n                               download={`lifestamps-${new Date().toLocaleDateString()}.json`}>\n                                <img src={downloadFile} alt=\"download your lifestamps as json\"/> download json\n                            </a>\n                        </>\n                        }\n                    </div>\n                    <div id=\"upload-control\" className=\"footer-control\" title=\"upload a previously downloaded file\">\n                        <InputFile actions={{onFileRead}}/>\n                    </div>\n\n\n                </div>\n                <h6>lifestamps by anubhav | 0.9.0-40</h6>\n            </footer>\n        </div>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}