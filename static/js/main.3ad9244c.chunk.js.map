{"version":3,"sources":["components/contexts/StampsContext.contexts.tsx","components/AddText.tsx","lib/stamps.utils.ts","lib/localStorge.utils.ts","components/hooks/localStorage.hook.ts","icons/file_upload_white_24dp.svg","components/InputFile.tsx","icons/file_download_white_24dp.svg","components/DownloadFile.tsx","icons/delete_black_24dp.svg","icons/favorite_border_black_24dp.svg","icons/favorite_black_24dp.svg","components/Stamps/StampListItem.tsx","components/Stamps/CurrentFilter.tsx","components/Stamps/ListStamps.tsx","components/Stamps/StampsContainer.tsx","App.tsx","lib/string.utils.ts","reportWebVitals.ts","index.tsx"],"names":["StampsContext","createContext","AddText","Consumer","onAddStamp","onTextInput","textValue","className","value","id","name","placeholder","onInput","e","onClick","formattedTimeStamp","Date","toJSON","split","day","time","replace","createStamp","note","serial","dts","now","ts","guid","created_at","updated_at","type","tags","createTags","favorite","sha1","lowered","match","map","w","trim","toLocaleLowerCase","Array","from","Set","featureAvailable","localStorage","setItem","getItem","removeItem","exists","key","useLocalList","push","values","JSON","parse","stringify","append","fetch","data","get","console","error","message","clear","remove","addAtBeginning","_values","unshift","InputFile","props","onFileRead","actions","htmlFor","style","cursor","src","uploadIcon","alt","accept","onChange","file","currentTarget","files","reader","FileReader","onload","target","result","log","readAsText","display","DownloadFile","stamps","length","href","encodeURIComponent","download","toLocaleDateString","downloadFile","StampListItem","_key","setFilterTag","onDelete","onToggle","tag","index","Delete","Favorite","UnFavorite","CurrentFilter","filterTag","ListStamps","onDeleteStamp","onToggleFavorite","useState","find","s","_stamps","items","sort","a","b","stamp","i","filter","includes","getListItems","StampsContainer","App","addStampToLocal","fetchStampsFromLocal","clearStampsFromLocal","setTextValue","setStamps","useEffect","newStamps","newStamp","upgradeStampsVersion","forEach","onLoad","Provider","findIndex","slice","deleteStamp","obj","toggleFavorite","mergedLifeStamps","stampsA","stampsB","reduce","Object","merge","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qNAWMA,G,MAAgBC,wBAAc,K,OCRrB,SAASC,IACpB,OACI,cAACF,EAAcG,SAAf,UACK,YAA2C,IAAzCC,EAAwC,EAAxCA,WAAYC,EAA4B,EAA5BA,YAAaC,EAAe,EAAfA,UACxB,OACI,sBAAKC,UAAU,qBAAf,UACI,0BACIC,MAAOF,EACPG,GAAG,WACHC,KAAK,WACLC,YAAY,kBACZC,QAAS,SAACC,GAAD,OAAOR,EAAYQ,MAEhC,wBAAQJ,GAAG,eAAeK,QAASV,EAAnC,qB,2CCCxB,SAASW,IACL,IACA,GADU,IAAIC,MAAOC,SACOC,MAAM,KAAlC,mBAAOC,EAAP,KACMC,EADN,KACwBF,MAAM,KAAK,GACnC,MAAM,GAAN,OAAUC,EAAIE,QAAQ,KAAM,KAA5B,YAAoCD,GAGzB,SAASE,EAAYC,EAAcC,GAC9C,IAAMC,EAAcT,KAAKU,MACzB,MAAO,CACHH,OACAI,GAAIZ,IACJN,GAAImB,cACJC,WAAYJ,EACZK,WAAYL,EACZD,SACAO,KAAM,YACNC,KAAMC,EAAWV,GACjBW,UAAU,EACVC,KAAMA,IAAKZ,IAInB,SAASU,EAAWV,GAChB,IAEMa,GAFQb,EAAKc,MAAM,wCAA0C,IAC9CC,KAAI,SAACC,GAAD,OAAeA,EAAEC,UAClBF,KAAI,SAAAC,GAAC,OAAIA,EAAEE,uBACnC,OAAOC,MAAMC,KAAK,IAAIC,IAAIR,IC5C9B,SAASS,IACL,GAA4B,qBAAjBC,aAiBP,OAAO,EAhBP,IAEI,OADAA,aAAaC,QAAQ,eAAgB,OACQ,QAAzCD,aAAaE,QAAQ,kBACrBF,aAAaG,WAAW,iBAEjB,GAKb,MAAOpC,GAEL,OAAO,GAQnB,SAASqC,EAAOC,GACZ,GAAIN,IACA,OAAqC,OAA9BC,aAAaE,QAAQG,GCtBrB,SAASC,EAAgBD,GAwBpC,MAAO,CAACE,KAvBR,SAAc7C,IDyClB,SAAmB2C,EAAa3C,GAC5B,GAAIqC,IACA,GAAIK,EAAOC,GAAM,CACb,IAAIG,EAASC,KAAKC,MAAMV,aAAaE,QAAQG,IAC7CG,EAAOD,KAAK7C,GACZsC,aAAaC,QAAQI,EAAKI,KAAKE,UAAUH,QACtC,CACH,IAAMA,EAAS,CAAC9C,GAChBsC,aAAaC,QAAQI,EAAKI,KAAKE,UAAUH,KChD7CI,CAAUP,EAAK3C,IAsBLmD,MAfd,WACI,IAAIC,EAAY,GAChB,IACIA,EAAOL,KAAKC,MDiDxB,SAAaL,GACT,OAAON,IAAqBC,aAAaE,QAAQG,GAAO,kBClD9BU,CAAIV,IAAkB,KAAO,GACjD,MAAOtC,GACLiD,QAAQC,MAAR,OAAclD,QAAd,IAAcA,OAAd,EAAcA,EAAGmD,SAHrB,QAKI,OAAOJ,IAQMK,MAJrB,YD6CJ,SAAgBd,GACRN,KAAsBK,EAAOC,IAC7BL,aAAaG,WAAWE,GC9CxBe,CAAOf,IAGiBgB,eAnB5B,SAA2B3D,IDqB/B,SAAoB2C,EAAa3C,GAC7B,GAAIqC,IAAoB,CACpB,GAAIK,EAAOC,GAAM,CACb,IAAMiB,EAAUtB,aAAaE,QAAQG,GACrC,GAAIiB,EAAS,CACT,IAAId,EAASC,KAAKC,MAAMY,GAGxB,OAFAd,EAAOe,QAAQ7D,QACfsC,aAAaC,QAAQI,EAAKI,KAAKE,UAAUH,KAIjD,IAAMA,EAAS,CAAC9C,GAChBsC,aAAaC,QAAQI,EAAKI,KAAKE,UAAUH,KChCzCe,CAAWlB,EAAK3C,KCRT,UAA0B,mDCI1B,SAAS8D,EAAUC,GAC9B,IAAOC,EAAcD,EAAME,QAApBD,WAaP,OACI,wBAAOE,QAAQ,SAASC,MAAO,CAACC,OAAQ,WAAYrE,UAAU,iBAA9D,UACI,qBAAKsE,IAAKC,EAAYC,IAAI,uCAC1B,uBACIhD,KAAK,OACLtB,GAAG,SACHC,KAAK,SACLsE,OAAO,mBACPC,SAnBZ,SAAgBpE,GAAsC,IAAD,IAC3CqE,EAAI,OAAGrE,QAAH,IAAGA,GAAH,UAAGA,EAAGsE,qBAAN,iBAAG,EAAkBC,aAArB,aAAG,EAA0B,GACjCC,EAAS,IAAIC,WACnBD,EAAOE,OAAS,SAAU1E,GACtB,IAAM+C,EAAOL,KAAKC,MAAM3C,EAAG2E,OAAQC,QACnCjB,EAAWZ,GACXE,QAAQ4B,IAAI9B,IAEhByB,EAAOM,WAAWT,EAAO,UAYjBP,MAAO,CAACiB,QAAS,aC3BlB,UAA0B,qDCI1B,SAASC,IACpB,OAAO,cAAC7F,EAAcG,SAAf,UACF,gBAAE2F,EAAF,EAAEA,OAAF,OAAc,mCACXA,EAAOC,OAAS,GAChB,mBACIC,KAAI,uCAAkCC,mBAAmB1C,KAAKE,UAAUqC,EAAQ,KAAM,KACtFI,SAAQ,sBAAgB,IAAIlF,MAAOmF,qBAA3B,SACR5F,UAAU,mBAHd,SAKI,qBAAKsE,IAAKuB,EAAcrB,IAAI,4C,YCb7B,MAA0B,8CCA1B,MAA0B,uDCA1B,MAA0B,gDCkBlC,SAASsB,EAAc9B,GAC1B,IACI9D,EASA8D,EATA9D,GACAc,EAQAgD,EARAhD,KACAI,EAOA4C,EAPA5C,GACA2E,EAMA/B,EANA+B,KACAtE,EAKAuC,EALAvC,KACAuE,EAIAhC,EAJAgC,aACAC,EAGAjC,EAHAiC,SACAC,EAEAlC,EAFAkC,SACAvE,EACAqC,EADArC,SAEJ,OAAO,sBAAK3B,UAAU,QAAf,UACH,qBAAKA,UAAU,KAAf,SACKoB,IAEL,qBAAKpB,UAAU,OAAf,SACI,cAAC,IAAD,UAAgBgB,MAEnBS,IAAY,OAAJA,QAAI,IAAJA,OAAA,EAAAA,EAAM+D,QAAS,GACxB,qBAAKxF,UAAU,OAAf,SACKyB,EACIM,KAAI,SAACoE,EAAaC,GAAd,OACD,sBAAMpG,UAAU,MAA+BO,QAAS,kBAAMyF,EAAaG,IAA3E,SAAkFA,GAAlF,kBAAsCC,SAIlD,sBAAKpG,UAAU,gBAAf,UACI,sBAAMA,UAAU,iBAAiBO,QAAS,kBAAM0F,EAAS/F,IAAzD,SACI,qBAAKoE,IAAK+B,EAAQ7B,IAAK,mBAE3B,sBAAMxE,UAAS,2BAAsB2B,EAAW,MAAQ,SAAWpB,QAAS,kBAAM2F,EAAShG,IAA3F,SACI,qBAAKoE,IAAK3C,EAAW2E,EAAWC,EAAY/B,IAAK,+BApB1BuB,GCvBhC,SAASS,EAAcxC,GAC1B,IAAOyC,EAA2BzC,EAA3ByC,UAAWT,EAAgBhC,EAAhBgC,aAElB,OAAO,mCACFS,GACD,sBAAKzG,UAAU,eAAeO,QAAS,WACnCyF,EAAa,KADjB,mBAEUS,OCHH,SAASC,EAAT,GAAgF,IAA3DnB,EAA0D,EAA1DA,OAAQoB,EAAkD,EAAlDA,cAAeC,EAAmC,EAAnCA,iBACvD,EAAkCC,mBAAS,IAA3C,mBAAOJ,EAAP,KAAkBT,EAAlB,KAqBA,SAASC,EAAS/F,GACdyG,EAAcpB,EAAOuB,MAAK,SAAAC,GAAC,OAAIA,EAAE7G,KAAOA,MAG5C,SAASgG,EAAShG,GACd0G,EAAiBrB,EAAOuB,MAAK,SAAAC,GAAC,OAAIA,EAAE7G,KAAOA,MAG/C,OAAO,qCACH,cAACsG,EAAD,CAAeC,UAAWA,EAAWT,aAAcA,IACnD,qBAAKhG,UAAU,SAAf,SA7BJ,SAAsBgH,GAClB,IAAMC,EAAQD,GAAWA,EAAQxB,OAAS,EACtCwB,EACKE,MAAK,SAACC,EAAGC,GAAJ,OAAUA,EAAE9F,WAAa6F,EAAE7F,cAChCS,KAAI,SAACsF,EAAkBC,GAAnB,MAAkC,CACnCtG,KAAMqG,EAAMrG,KACZI,GAAIiG,EAAMjG,GACV2E,KAAK,aAAD,OAAeuB,GACnB7F,KAAM4F,EAAM5F,KACZvB,GAAImH,EAAMnH,GACV8F,eACAC,WACAC,WACAvE,SAAU0F,EAAM1F,aAEtB,GACN,OAAO8E,EAAYQ,EAAMM,QAAO,SAAAD,GAAC,uBAAIA,EAAE7F,YAAN,aAAI,EAAQ+F,SAASf,MAAcQ,EAe5DQ,CAAalC,GACRxD,KAAI,SAACgB,GAAD,OACD,wBAAC+C,EAAD,2BACQ/C,GADR,IAEIH,IAAG,UAAKG,EAAOgD,KAAZ,qBANM,aCvC9B,SAAS2B,IACZ,OAAO,cAACjI,EAAcG,SAAf,UAEC,gBAAE2F,EAAF,EAAEA,OAAQoB,EAAV,EAAUA,cAAeC,EAAzB,EAAyBA,iBAAzB,OAA+C,cAACF,EAAD,CAE3CnB,OAAQA,EACRoB,cAAeA,EACfC,iBAAkBA,GAHd,2BC8FLe,MA3Ff,WACI,MAII9E,EAAa,cAHG+E,EADpB,EACIhE,eACOiE,EAFX,EAEIzE,MACO0E,EAHX,EAGIpE,MAGJ,EAAkCmD,mBAAS,IAA3C,mBAAO9G,EAAP,KAAkBgI,EAAlB,KACA,EAA4BlB,mBAASgB,KAArC,mBAAOtC,EAAP,KAAeyC,EAAf,KAoDA,OAlDAC,qBAAU,YACN,WACI,IAAMC,EdoCX,SAA8B3C,GAMjC,OAAOA,EAAOxD,KALd,SAAoBsF,GAChB,IAAMc,EAAWpH,EAAYsG,EAAMrG,KAAMqG,EAAMpG,QAC/C,OAAO,uCAAIkH,GAAad,GAAxB,IAA+B5F,KAAM0G,EAAS1G,KAAMG,KAAMuG,EAASvG,UcvC7CwG,CAAqB7C,GACvCuC,IACAI,EAAUG,SAAQ,SAAChB,GAAD,OAAsBO,EAA2BP,MACnEW,EAAUE,GAEdI,KACD,IA2CC,qBAAKtI,UAAU,MAAf,SACI,eAACP,EAAc8I,SAAf,CAAwBtI,MAAO,CAC3BsF,SACA1F,WAxCZ,SAAoBS,GAChB,GAAIP,EAAW,CACX,IAAMsH,EAAQtG,EAAYhB,EAAWwF,EAAOC,OAAS,GACrDwC,EAAU,CAACX,GAAF,mBAAY9B,KACrBqC,EAA2BP,GAC3BU,EAAa,MAoCTjI,YA7CZ,SAAqBQ,GACjByH,EAAazH,EAAEsE,cAAc3E,QA6CrBF,YACA4G,cAlCZ,SAAuBU,GACnB,GAAIA,EAAO,CACP9D,QAAQ4B,IAAI,mBAAoBkC,GAChC,IAAMa,EdqBX,SAAqBjH,EAAgBf,EAAYqF,GACpD,IAAMa,EAAQb,EAAOiD,WAAU,SAAAnB,GAAK,OAAIA,EAAMnH,KAAOA,GAAMmH,EAAMpG,SAAWA,KAE5E,MAAM,GAAN,mBAAWsE,EAAOkD,MAAM,EAAGrC,IAA3B,YAAsCb,EAAOkD,MAAMrC,EAAQ,KcxBjCsC,CAAYrB,EAAMpG,OAAQoG,EAAMnH,GAAIqF,GACtDuC,IACAI,EAAUG,SAAQ,SAAChB,GAAD,OAAsBO,EAA2BP,MACnEW,EAAUE,KA6BNtB,iBAzBZ,SAA0BS,GACtB,GAAIA,EAAO,CACP9D,QAAQ4B,IAAI,qBCxDHwD,EDwD6BtB,ECvDvCrE,KAAKE,UAAUyF,EAAK,KAAM,KDwDzB,IAAMT,EdiBX,SAAwBjH,EAAgBf,EAAYqF,GACvD,IAAMa,EAAQb,EAAOiD,WAAU,SAAAnB,GAAK,OAAIA,EAAMnH,KAAOA,GAAMmH,EAAMpG,SAAWA,KAG5E,OADAsE,EAAOa,GAAOzE,UAAY4D,EAAOa,GAAOzE,SACjC,YAAI4D,GcrBeqD,CAAevB,EAAMpG,OAAQoG,EAAMnH,GAAIqF,GACzDuC,IACAI,EAAUG,SAAQ,SAAChB,GAAD,OAAsBO,EAA2BP,MACnEW,EAAUE,GC5Df,IAAcS,IDyET,UAQI,wBAAQ3I,UAAU,SAAlB,SACI,oBAAIA,UAAU,QAAd,SAAsB,mBAAGyF,KAAK,cAAR,4BAE1B,0BAASzF,UAAU,UAAnB,UACI,cAACL,EAAD,IACA,cAAC+H,EAAD,OAEJ,yBAAQ1H,UAAU,SAAlB,UACI,sBAAKA,UAAU,WAAf,UACI,qFACA,cAACsF,EAAD,IACA,cAACvB,EAAD,CAAWG,QAAS,CAACD,WA5BzC,SAAoBZ,GAChB,IAAMwF,EdlBP,SAAoCC,EAAcC,GACrD,IAAIJ,EAAMG,EAAQE,QAAO,SAAC7B,EAAWE,GAEjC,OADC,2BAAOF,GAAP,4BAAcE,EAAMnH,IAAOmH,MAE7B,IAKH,OAJAsB,EAAMI,EAAQC,QAAO,SAAC7B,EAAWE,GAE7B,OADC,2BAAOF,GAAP,4BAAcE,EAAMnH,IAAOmH,MAE7BsB,GACIM,OAAOlG,OAAO4F,GcSQO,CAAiB3D,EAAQlC,GAClDyE,IACAe,EAAiBR,SAAQ,SAAChB,GAAD,OAAsBO,EAA2BP,MAC1EW,EAAUa,UA0BE,uCACA,6EEjFLM,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.3ad9244c.chunk.js","sourcesContent":["import {createContext, FormEvent, SyntheticEvent} from \"react\";\nimport {LifeStamp} from \"../../lib/stamps.utils\";\n\ntype LifeStampContextT = {\n    stamps: LifeStamp[],\n    onTextInput: (e: FormEvent<HTMLTextAreaElement>) => void,\n    onAddStamp: (e: SyntheticEvent<HTMLButtonElement, Event>) => void,\n    textValue: string,\n    onDeleteStamp: (stamp: LifeStamp) => void,\n    onToggleFavorite: (stamp: LifeStamp) => void,\n}\nconst StampsContext = createContext({} as LifeStampContextT);\n\nexport {StampsContext};\nexport type {LifeStampContextT};\n","import React from \"react\";\nimport {StampsContext} from \"./contexts/StampsContext.contexts\";\n\nexport default function AddText() {\n    return (\n        <StampsContext.Consumer>\n            {({onAddStamp, onTextInput, textValue}) => {\n                return (\n                    <div className=\"add-text-container\">\n                        <textarea\n                            value={textValue}\n                            id=\"add-text\"\n                            name=\"add-text\"\n                            placeholder=\"enter text here\"\n                            onInput={(e) => onTextInput(e)}\n                        />\n                        <button id=\"add-text-btn\" onClick={onAddStamp}>+</button>\n                    </div>\n                );\n            }}\n        </StampsContext.Consumer>\n    );\n}\n","import {v4 as guid} from 'uuid';\nimport {jstr} from \"./string.utils\";\nimport sha1 from 'sha1';\n\nexport type LifeStamp = {\n    note: string,\n    ts: string,\n    id: string,\n    created_at: number;\n    updated_at: number;\n    serial: number;\n    type: string;\n    tags?: string[];\n    favorite?: boolean;\n    sha1?: string;\n}\n\nfunction formattedTimeStamp() {\n    const d = new Date().toJSON();\n    const [day, timeString] = d.split('T');\n    const time = timeString.split('.')[0];\n    return `${day.replace(/-/g, '.')} ${time}`;\n}\n\nexport default function createStamp(note: string, serial: number): LifeStamp {\n    const dts: number = Date.now();\n    return {\n        note,\n        ts: formattedTimeStamp(),\n        id: guid(),\n        created_at: dts,\n        updated_at: dts,\n        serial,\n        type: 'LifeStamp',\n        tags: createTags(note),\n        favorite: false,\n        sha1: sha1(note)\n    };\n}\n\nfunction createTags(note: string): string[] {\n    const tags = (note.match(/^#[A-Za-z0-9-_]+|\\W#[A-Za-z0-9-_]+/g) || []);\n    const trimmed = tags.map((w: string) => w.trim());\n    const lowered = trimmed.map(w => w.toLocaleLowerCase());\n    return Array.from(new Set(lowered));\n}\n\nexport function merge<T extends LifeStamp>(stampsA: T[], stampsB: T[]) {\n    let obj = stampsA.reduce((a: Object, stamp: T) => {\n        a = {...a, [`${stamp.id}`]: stamp};\n        return a;\n    }, {});\n    obj = stampsB.reduce((a: Object, stamp: T) => {\n        a = {...a, [`${stamp.id}`]: stamp};\n        return a;\n    }, obj);\n    return Object.values(obj);\n}\n\nexport function upgradeStampsVersion(stamps: LifeStamp[]): LifeStamp[] {\n    function cloneStamp(stamp: LifeStamp): LifeStamp {\n        const newStamp = createStamp(stamp.note, stamp.serial);\n        return {...newStamp, ...stamp, tags: newStamp.tags, sha1: newStamp.sha1};\n    }\n\n    return stamps.map(cloneStamp);\n}\n\nexport function deleteStamp(serial: number, id: string, stamps: LifeStamp[]): LifeStamp[] {\n    const index = stamps.findIndex(stamp => stamp.id === id && stamp.serial === serial);\n    // console.log(`deleteStamp`, jstr(stamps[index]));\n    return [...stamps.slice(0, index), ...stamps.slice(index + 1)];\n}\n\nexport function toggleFavorite(serial: number, id: string, stamps: LifeStamp[]): LifeStamp[] {\n    const index = stamps.findIndex(stamp => stamp.id === id && stamp.serial === serial);\n    // console.log(`toggleFavorite`, jstr(stamps[index]));\n    stamps[index].favorite = !stamps[index].favorite;\n    return [...stamps];\n}\n","function featureAvailable() {\n    if (typeof localStorage !== 'undefined') {\n        try {\n            localStorage.setItem('feature_test', 'yes');\n            if (localStorage.getItem('feature_test') === 'yes') {\n                localStorage.removeItem('feature_test');\n                // localStorage is enabled\n                return true;\n            } else {\n                // localStorage is disabled\n                return false;\n            }\n        } catch (e) {\n            // localStorage is disabled\n            return false;\n        }\n    } else {\n        // localStorage is not available\n        return false;\n    }\n}\n\nfunction exists(key: string) {\n    if (featureAvailable()) {\n        return localStorage.getItem(key) !== null;\n    }\n}\n\nfunction unshift<T>(key: string, value: T) {\n    if (featureAvailable()) {\n        if (exists(key)) {\n            const _values = localStorage.getItem(key);\n            if (_values) {\n                let values = JSON.parse(_values as string);\n                values.unshift(value);\n                localStorage.setItem(key, JSON.stringify(values));\n                return;\n            }\n        }\n        const values = [value];\n        localStorage.setItem(key, JSON.stringify(values));\n    }\n}\n\nfunction append<T>(key: string, value: T) {\n    if (featureAvailable()) {\n        if (exists(key)) {\n            let values = JSON.parse(localStorage.getItem(key) as string);\n            values.push(value);\n            localStorage.setItem(key, JSON.stringify(values));\n        } else {\n            const values = [value];\n            localStorage.setItem(key, JSON.stringify(values));\n        }\n    }\n}\n\nfunction set(key: string, value: string) {\n    if (featureAvailable()) {\n        localStorage.setItem(key, value);\n    }\n}\n\nfunction get(key: string) {\n    return featureAvailable() ? localStorage.getItem(key) : 'no localStorage';\n}\n\nfunction remove(key: string) {\n    if (featureAvailable() && exists(key)) {\n        localStorage.removeItem(key);\n    }\n}\n\nexport {exists, featureAvailable, get, set, append, remove, unshift};\n","import {append, get, remove, unshift} from \"../../lib/localStorge.utils\";\n\nexport default function useLocalList<T>(key: string) {\n    function push(value: T) {\n        append<T>(key, value);\n    }\n\n    function addAtBeginning<T>(value: T) {\n        unshift<T>(key, value);\n    }\n\n    function fetch<T>(): T[] {\n        let data: T[] = [];\n        try {\n            data = JSON.parse(get(key) as string || '') || [] as T[];\n        } catch (e: any) {\n            console.error(e?.message);\n        } finally {\n            return data;\n        }\n    }\n\n    function clear() {\n        remove(key);\n    }\n\n    return {push, fetch, clear, addAtBeginning};\n}\n","export default __webpack_public_path__ + \"static/media/file_upload_white_24dp.efa74fb3.svg\";","import React, {SyntheticEvent} from \"react\";\n\nimport uploadIcon from '../icons/file_upload_white_24dp.svg';\n\nexport default function InputFile(props: any) {\n    const {onFileRead} = props.actions;\n\n    function onFile(e: SyntheticEvent<HTMLInputElement>) {\n        const file = e?.currentTarget?.files?.[0];\n        const reader = new FileReader();\n        reader.onload = function (e) {\n            const data = JSON.parse(e!.target!.result as string);\n            onFileRead(data);\n            console.log(data);\n        };\n        reader.readAsText(file!, 'utf-8');\n    }\n\n    return (\n        <label htmlFor=\"upload\" style={{cursor: 'pointer'}} className=\"upload-control\">\n            <img src={uploadIcon} alt=\"upload previously downloaded json.\"/>\n            <input\n                type=\"file\"\n                id=\"upload\"\n                name=\"upload\"\n                accept=\"application/json\"\n                onChange={onFile}\n                style={{display: 'none'}}\n            />\n        </label>\n\n    );\n}\n","export default __webpack_public_path__ + \"static/media/file_download_white_24dp.e46f4fb0.svg\";","import React from 'react';\nimport downloadFile from \"../icons/file_download_white_24dp.svg\";\nimport {StampsContext} from \"./contexts/StampsContext.contexts\";\n\nexport default function DownloadFile() {\n    return <StampsContext.Consumer>\n        {({stamps}) => <>{\n            stamps.length > 0 &&\n            <a\n                href={`data:text/json;charset=utf-8,${encodeURIComponent(JSON.stringify(stamps, null, 4))}`}\n                download={`lifestamps-${new Date().toLocaleDateString()}.json`}\n                className=\"download-control\"\n            >\n                <img src={downloadFile} alt=\"download your lifestamps as json\"/>\n            </a>\n        }\n        </>\n        }\n    </StampsContext.Consumer>;\n}","export default __webpack_public_path__ + \"static/media/delete_black_24dp.1129c53a.svg\";","export default __webpack_public_path__ + \"static/media/favorite_border_black_24dp.8d60aaea.svg\";","export default __webpack_public_path__ + \"static/media/favorite_black_24dp.66089a9f.svg\";","import React, {Dispatch, SetStateAction} from \"react\";\nimport ReactMarkdown from \"react-markdown\";\nimport Delete from '../../icons/delete_black_24dp.svg';\nimport UnFavorite from '../../icons/favorite_border_black_24dp.svg';\nimport Favorite from '../../icons/favorite_black_24dp.svg';\n\nexport type StampListItemType = {\n    note: string;\n    ts: string;\n    _key: string;\n    tags?: string[];\n    id: string;\n    setFilterTag: Dispatch<SetStateAction<string>>;\n    onDelete: (id: string) => void;\n    onToggle: (id: string) => void;\n    favorite?: boolean;\n}\n\nexport function StampListItem(props: StampListItemType) {\n    const {\n        id,\n        note,\n        ts,\n        _key,\n        tags,\n        setFilterTag,\n        onDelete,\n        onToggle,\n        favorite\n    } = props;\n    return <div className=\"stamp\" key={_key}>\n        <div className=\"ts\">\n            {ts}\n        </div>\n        <div className=\"note\">\n            <ReactMarkdown>{note}</ReactMarkdown>\n        </div>\n        {tags && tags?.length > 0 &&\n        <div className=\"tags\">\n            {tags\n                .map((tag: string, index: number) =>\n                    <span className=\"tag\" key={`key-tag-${index}`} onClick={() => setFilterTag(tag)}>{tag}</span>)\n            }\n        </div>\n        }\n        <div className=\"stamp-actions\">\n            <span className=\"delete-btn btn\" onClick={() => onDelete(id)}>\n                <img src={Delete} alt={\"delete stamp\"}/>\n            </span>\n            <span className={`favorite-btn btn ${favorite ? 'fav' : 'unfav'}`} onClick={() => onToggle(id)}>\n                <img src={favorite ? Favorite : UnFavorite} alt={\"favorite this stamp\"}/>\n            </span>\n        </div>\n    </div>;\n}\n","import React, {Dispatch, SetStateAction} from \"react\";\n\nexport type CurrentFilterType = {\n    filterTag: string;\n    setFilterTag: Dispatch<SetStateAction<string>>\n}\n\nexport function CurrentFilter(props: CurrentFilterType) {\n    const {filterTag, setFilterTag} = props;\n\n    return <>\n        {filterTag &&\n        <div className=\"filter-close\" onClick={() => {\n            setFilterTag('');\n        }}>clear {filterTag}</div>}\n    </>;\n}\n","import React, {useState} from \"react\";\nimport {LifeStamp} from \"../../lib/stamps.utils\";\nimport {StampListItem, StampListItemType} from \"./StampListItem\";\nimport {CurrentFilter} from \"./CurrentFilter\";\n\ntype ListStampsType = {\n    stamps: LifeStamp[];\n    onDeleteStamp: (stamp: LifeStamp) => void;\n    onToggleFavorite: (stamp: LifeStamp) => void;\n}\n\nexport default function ListStamps({stamps, onDeleteStamp, onToggleFavorite}: ListStampsType) {\n    const [filterTag, setFilterTag] = useState('');\n\n    function getListItems(_stamps: LifeStamp[]): StampListItemType[] {\n        const items = _stamps && _stamps.length > 0 ?\n            _stamps\n                .sort((a, b) => b.created_at - a.created_at)\n                .map((stamp: LifeStamp, i: number) => ({\n                    note: stamp.note,\n                    ts: stamp.ts,\n                    _key: `list-item-${i}`,\n                    tags: stamp.tags,\n                    id: stamp.id,\n                    setFilterTag,\n                    onDelete,\n                    onToggle,\n                    favorite: stamp.favorite\n                }))\n            : [];\n        return filterTag ? items.filter(i => i.tags?.includes(filterTag)) : items;\n    }\n\n    function onDelete(id: string) {\n        onDeleteStamp(stamps.find(s => s.id === id) as LifeStamp);\n    }\n\n    function onToggle(id: string) {\n        onToggleFavorite(stamps.find(s => s.id === id) as LifeStamp);\n    }\n\n    return <>\n        <CurrentFilter filterTag={filterTag} setFilterTag={setFilterTag}/>\n        <div className=\"stamps\" key={'stamps'}>\n            {\n                getListItems(stamps)\n                    .map((values: StampListItemType) =>\n                        <StampListItem\n                            {...values}\n                            key={`${values._key}-container`}\n                        />\n                    )\n            }\n        </div>\n    </>;\n}\n\n","import {StampsContext} from \"../contexts/StampsContext.contexts\";\nimport React from \"react\";\nimport ListStamps from \"./ListStamps\";\n\nexport function StampsContainer() {\n    return <StampsContext.Consumer>\n        {\n            ({stamps, onDeleteStamp, onToggleFavorite}) => <ListStamps\n                key=\"lifestamps-container\"\n                stamps={stamps}\n                onDeleteStamp={onDeleteStamp}\n                onToggleFavorite={onToggleFavorite}\n            />\n        }\n    </StampsContext.Consumer>;\n}","import React, {FormEvent, SyntheticEvent, useEffect, useState} from 'react';\nimport './App.css';\nimport AddText from \"./components/AddText\";\nimport createStamp, {deleteStamp, LifeStamp, merge, toggleFavorite, upgradeStampsVersion} from \"./lib/stamps.utils\";\nimport useLocalList from \"./components/hooks/localStorage.hook\";\nimport InputFile from \"./components/InputFile\";\nimport DownloadFile from \"./components/DownloadFile\";\nimport {StampsContext} from './components/contexts/StampsContext.contexts';\nimport {StampsContainer} from \"./components/Stamps/StampsContainer\";\nimport {jstr} from \"./lib/string.utils\";\n\nfunction App() {\n    const {\n        addAtBeginning: addStampToLocal,\n        fetch: fetchStampsFromLocal,\n        clear: clearStampsFromLocal\n    } = useLocalList('LIFESTAMPS');\n\n    const [textValue, setTextValue] = useState('');\n    const [stamps, setStamps] = useState(fetchStampsFromLocal<LifeStamp>());\n\n    useEffect(() => {\n        function onLoad() {\n            const newStamps = upgradeStampsVersion(stamps);\n            clearStampsFromLocal();\n            newStamps.forEach((stamp: LifeStamp) => addStampToLocal<LifeStamp>(stamp));\n            setStamps(newStamps);\n        }\n        onLoad();\n    }, []);\n\n    function onTextInput(e: FormEvent<HTMLTextAreaElement>) {\n        setTextValue(e.currentTarget.value);\n    }\n\n    function onAddStamp(e: SyntheticEvent<HTMLButtonElement>) {\n        if (textValue) {\n            const stamp = createStamp(textValue, stamps.length + 1);\n            setStamps([stamp, ...stamps]);\n            addStampToLocal<LifeStamp>(stamp);\n            setTextValue('');\n        }\n    }\n\n    function onDeleteStamp(stamp: LifeStamp) {\n        if (stamp) {\n            console.log('deleting a stamp', stamp);\n            const newStamps = deleteStamp(stamp.serial, stamp.id, stamps);\n            clearStampsFromLocal();\n            newStamps.forEach((stamp: LifeStamp) => addStampToLocal<LifeStamp>(stamp));\n            setStamps(newStamps);\n        }\n    }\n\n    function onToggleFavorite(stamp: LifeStamp) {\n        if (stamp) {\n            console.log('toggling favorite', jstr(stamp));\n            const newStamps = toggleFavorite(stamp.serial, stamp.id, stamps);\n            clearStampsFromLocal();\n            newStamps.forEach((stamp: LifeStamp) => addStampToLocal<LifeStamp>(stamp));\n            setStamps(newStamps);\n        }\n    }\n\n    function onFileRead(data: LifeStamp[]) {\n        const mergedLifeStamps = merge<LifeStamp>(stamps, data);\n        clearStampsFromLocal();\n        mergedLifeStamps.forEach((stamp: LifeStamp) => addStampToLocal<LifeStamp>(stamp));\n        setStamps(mergedLifeStamps);\n    }\n\n    return (\n        <div className=\"App\">\n            <StampsContext.Provider value={{\n                stamps,\n                onAddStamp,\n                onTextInput,\n                textValue,\n                onDeleteStamp,\n                onToggleFavorite\n            }}>\n                <header className=\"header\">\n                    <h2 className=\"brand\"><a href=\"/lifestamps\">LifeStamps</a></h2>\n                </header>\n                <section className=\"content\">\n                    <AddText/>\n                    <StampsContainer/>\n                </section>\n                <footer className=\"footer\">\n                    <div className=\"controls\">\n                        <>JSON: (you can download and upload your data)</>\n                        <DownloadFile/>\n                        <InputFile actions={{onFileRead}}/>\n                    </div>\n                    <div>&nbsp;</div>\n                    <h6>lifestamps by anubhav | 0.35.0-176</h6>\n                </footer>\n            </StampsContext.Provider>\n        </div>\n    );\n}\n\nexport default App;\n","export function jstr(obj: any) {\n    return JSON.stringify(obj, null, 4);\n}\n\nexport function isEmptyOrNull(str: string) {\n    return typeof str === typeof '' && (!str || str.length === 0);\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}