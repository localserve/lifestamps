{"version":3,"sources":["components/contexts/StampsContext.contexts.tsx","components/AddText.tsx","lib/stamps.utils.ts","lib/localStorge.utils.ts","components/hooks/localStorage.hook.ts","icons/file_upload_white_24dp.svg","components/InputFile.tsx","icons/file_download_white_24dp.svg","components/DownloadFile.tsx","icons/delete_black_24dp.svg","components/Stamps/StampListItem.tsx","components/Stamps/CurrentFilter.tsx","components/Stamps/ListStamps.tsx","components/Stamps/StampsContainer.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["StampsContext","createContext","AddText","Consumer","onAddStamp","onTextInput","textValue","className","value","id","name","placeholder","onInput","e","onClick","formattedTimeStamp","Date","toJSON","split","day","time","replace","createStamp","note","serial","dts","now","ts","guid","created_at","updated_at","type","tags","createTags","lowered","match","map","w","trim","toLocaleLowerCase","Array","from","Set","featureAvailable","localStorage","setItem","getItem","removeItem","exists","key","useLocalList","push","values","JSON","parse","stringify","append","fetch","data","get","console","error","message","clear","remove","addAtBeginning","_values","unshift","InputFile","props","onFileRead","actions","htmlFor","style","cursor","src","uploadIcon","alt","accept","onChange","file","currentTarget","files","reader","FileReader","onload","target","result","log","readAsText","display","DownloadFile","stamps","length","href","encodeURIComponent","download","toLocaleDateString","downloadFile","StampListItem","_key","setFilterTag","onDelete","tag","index","Delete","CurrentFilter","filterTag","ListStamps","onDeleteStamp","useState","find","s","_stamps","items","sort","a","b","stamp","i","filter","includes","getListItems","StampsContainer","App","addStampToLocal","fetchStampsFromLocal","clearStampsFromLocal","setTextValue","newStamp","upgradeStampsVersion","setStamps","Provider","newStamps","findIndex","slice","deleteStamp","forEach","mergedLifeStamps","stampsA","stampsB","obj","reduce","Object","merge","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qNAUMA,G,MAAgBC,wBAAc,K,OCPrB,SAASC,IACpB,OACI,cAACF,EAAcG,SAAf,UACK,YAA2C,IAAzCC,EAAwC,EAAxCA,WAAYC,EAA4B,EAA5BA,YAAaC,EAAe,EAAfA,UACxB,OACI,sBAAKC,UAAU,qBAAf,UACI,0BACIC,MAAOF,EACPG,GAAG,WACHC,KAAK,WACLC,YAAY,kBACZC,QAAS,SAACC,GAAD,OAAOR,EAAYQ,MAEhC,wBAAQJ,GAAG,eAAeK,QAASV,EAAnC,qB,0BCHxB,SAASW,IACL,IACA,GADU,IAAIC,MAAOC,SACOC,MAAM,KAAlC,mBAAOC,EAAP,KACMC,EADN,KACwBF,MAAM,KAAK,GACnC,MAAM,GAAN,OAAUC,EAAIE,QAAQ,KAAM,KAA5B,YAAoCD,GAGzB,SAASE,EAAYC,EAAcC,GAC9C,IAAMC,EAAcT,KAAKU,MACzB,MAAO,CACHH,OACAI,GAAIZ,IACJN,GAAImB,cACJC,WAAYJ,EACZK,WAAYL,EACZD,SACAO,KAAM,YACNC,KAAMC,EAAWV,IAIzB,SAASU,EAAWV,GAChB,IAEMW,GAFQX,EAAKY,MAAM,wCAA0C,IAC9CC,KAAI,SAACC,GAAD,OAAeA,EAAEC,UAClBF,KAAI,SAAAC,GAAC,OAAIA,EAAEE,uBACnC,OAAOC,MAAMC,KAAK,IAAIC,IAAIR,ICtC9B,SAASS,IACL,GAA4B,qBAAjBC,aAiBP,OAAO,EAhBP,IAEI,OADAA,aAAaC,QAAQ,eAAgB,OACQ,QAAzCD,aAAaE,QAAQ,kBACrBF,aAAaG,WAAW,iBAEjB,GAKb,MAAOlC,GAEL,OAAO,GAQnB,SAASmC,EAAOC,GACZ,GAAIN,IACA,OAAqC,OAA9BC,aAAaE,QAAQG,GCtBrB,SAASC,EAAgBD,GAwBpC,MAAO,CAACE,KAvBR,SAAc3C,IDyClB,SAAmByC,EAAazC,GAC5B,GAAImC,IACA,GAAIK,EAAOC,GAAM,CACb,IAAIG,EAASC,KAAKC,MAAMV,aAAaE,QAAQG,IAC7CG,EAAOD,KAAK3C,GACZoC,aAAaC,QAAQI,EAAKI,KAAKE,UAAUH,QACtC,CACH,IAAMA,EAAS,CAAC5C,GAChBoC,aAAaC,QAAQI,EAAKI,KAAKE,UAAUH,KChD7CI,CAAUP,EAAKzC,IAsBLiD,MAfd,WACI,IAAIC,EAAY,GAChB,IACIA,EAAOL,KAAKC,MDiDxB,SAAaL,GACT,OAAON,IAAqBC,aAAaE,QAAQG,GAAO,kBClD9BU,CAAIV,IAAkB,KAAO,GACjD,MAAOpC,GACL+C,QAAQC,MAAR,OAAchD,QAAd,IAAcA,OAAd,EAAcA,EAAGiD,SAHrB,QAKI,OAAOJ,IAQMK,MAJrB,YD6CJ,SAAgBd,GACRN,KAAsBK,EAAOC,IAC7BL,aAAaG,WAAWE,GC9CxBe,CAAOf,IAGiBgB,eAnB5B,SAA2BzD,IDqB/B,SAAoByC,EAAazC,GAC7B,GAAImC,IAAoB,CACpB,GAAIK,EAAOC,GAAM,CACb,IAAMiB,EAAUtB,aAAaE,QAAQG,GACrC,GAAIiB,EAAS,CACT,IAAId,EAASC,KAAKC,MAAMY,GAGxB,OAFAd,EAAOe,QAAQ3D,QACfoC,aAAaC,QAAQI,EAAKI,KAAKE,UAAUH,KAIjD,IAAMA,EAAS,CAAC5C,GAChBoC,aAAaC,QAAQI,EAAKI,KAAKE,UAAUH,KChCzCe,CAAWlB,EAAKzC,KCRT,UAA0B,mDCI1B,SAAS4D,EAAUC,GAC9B,IAAOC,EAAcD,EAAME,QAApBD,WAaP,OACI,wBAAOE,QAAQ,SAASC,MAAO,CAACC,OAAQ,WAAYnE,UAAU,iBAA9D,UACI,qBAAKoE,IAAKC,EAAYC,IAAI,uCAC1B,uBACI9C,KAAK,OACLtB,GAAG,SACHC,KAAK,SACLoE,OAAO,mBACPC,SAnBZ,SAAgBlE,GAAsC,IAAD,IAC3CmE,EAAI,OAAGnE,QAAH,IAAGA,GAAH,UAAGA,EAAGoE,qBAAN,iBAAG,EAAkBC,aAArB,aAAG,EAA0B,GACjCC,EAAS,IAAIC,WACnBD,EAAOE,OAAS,SAAUxE,GACtB,IAAM6C,EAAOL,KAAKC,MAAMzC,EAAGyE,OAAQC,QACnCjB,EAAWZ,GACXE,QAAQ4B,IAAI9B,IAEhByB,EAAOM,WAAWT,EAAO,UAYjBP,MAAO,CAACiB,QAAS,aC3BlB,UAA0B,qDCI1B,SAASC,IACpB,OAAO,cAAC3F,EAAcG,SAAf,UACF,gBAAEyF,EAAF,EAAEA,OAAF,OAAc,mCACXA,EAAOC,OAAS,GAChB,mBACIC,KAAI,uCAAkCC,mBAAmB1C,KAAKE,UAAUqC,EAAQ,KAAM,KACtFI,SAAQ,sBAAgB,IAAIhF,MAAOiF,qBAA3B,SACR1F,UAAU,mBAHd,SAKI,qBAAKoE,IAAKuB,EAAcrB,IAAI,4C,YCb7B,MAA0B,8CCclC,SAASsB,EAAT,GAA+F,IAAvE1F,EAAsE,EAAtEA,GAAIc,EAAkE,EAAlEA,KAAMI,EAA4D,EAA5DA,GAAIyE,EAAwD,EAAxDA,KAAMpE,EAAkD,EAAlDA,KAAMqE,EAA4C,EAA5CA,aAAcC,EAA8B,EAA9BA,SACnE,OAAO,sBAAK/F,UAAU,QAAf,UACH,qBAAKA,UAAU,KAAf,SACKoB,IAEL,qBAAKpB,UAAU,OAAf,SACI,cAAC,IAAD,UAAgBgB,MAEnBS,IAAY,OAAJA,QAAI,IAAJA,OAAA,EAAAA,EAAM6D,QAAS,GACxB,qBAAKtF,UAAU,OAAf,SACKyB,EACII,KAAI,SAACmE,EAAaC,GAAd,OACD,sBAAMjG,UAAU,MAA+BO,QAAS,kBAAMuF,EAAaE,IAA3E,SAAkFA,GAAlF,kBAAsCC,SAIlD,qBAAKjG,UAAU,gBAAf,SACI,sBAAMA,UAAU,iBAAiBO,QAAS,kBAAMwF,EAAS7F,IAAzD,SAA8D,qBAAKkE,IAAK8B,EACL5B,IAAK,uBAjB7CuB,GCRhC,SAASM,EAAcrC,GAC1B,IAAOsC,EAA2BtC,EAA3BsC,UAAWN,EAAgBhC,EAAhBgC,aAElB,OAAO,mCACFM,GACD,sBAAKpG,UAAU,eAAeO,QAAS,WACnCuF,EAAa,KADjB,mBAEUM,OCTH,SAASC,EAAT,GAAkH,IAA7FhB,EAA4F,EAA5FA,OAAQiB,EAAoF,EAApFA,cACxC,EAAkCC,mBAAS,IAA3C,mBAAOH,EAAP,KAAkBN,EAAlB,KAmBA,SAASC,EAAS7F,GACdoG,EAAcjB,EAAOmB,MAAK,SAAAC,GAAC,OAAIA,EAAEvG,KAAOA,MAG5C,OAAO,qCACH,cAACiG,EAAD,CAAeC,UAAWA,EAAWN,aAAcA,IACnD,qBAAK9F,UAAU,SAAf,SAvBJ,SAAsB0G,GAClB,IAAMC,EAAQD,GAAWA,EAAQpB,OAAS,EACtCoB,EACKE,MAAK,SAACC,EAAGC,GAAJ,OAAUA,EAAExF,WAAauF,EAAEvF,cAChCO,KAAI,SAACkF,EAAkBC,GAAnB,MAAkC,CACnChG,KAAM+F,EAAM/F,KACZI,GAAI2F,EAAM3F,GACVyE,KAAK,aAAD,OAAemB,GACnBvF,KAAMsF,EAAMtF,KACZvB,GAAI6G,EAAM7G,GACV4F,eACAC,eAEN,GACN,OAAOK,EAAYO,EAAMM,QAAO,SAAAD,GAAC,uBAAIA,EAAEvF,YAAN,aAAI,EAAQyF,SAASd,MAAcO,EAW5DQ,CAAa9B,GACRxD,KAAI,SAACgB,GAAD,OACD,wBAAC+C,EAAD,2BACQ/C,GADR,IAEIH,IAAG,UAAKG,EAAOgD,KAAZ,qBANM,aC3B9B,SAASuB,IACZ,OAAO,cAAC3H,EAAcG,SAAf,UAEC,gBAAEyF,EAAF,EAAEA,OAAQiB,EAAV,EAAUA,cAAV,OAA6B,cAACD,EAAD,CAEzBhB,OAAQA,EACRiB,cAAeA,GAFX,2BCwELe,MAtEf,WACI,MAII1E,EAAa,cAHG2E,EADpB,EACI5D,eACO6D,EAFX,EAEIrE,MACOsE,EAHX,EAGIhE,MAGJ,EAAkC+C,mBAAS,IAA3C,mBAAOxG,EAAP,KAAkB0H,EAAlB,KACA,EAA4BlB,mBZmCzB,SAA8BlB,GAMjC,OAAOA,EAAOxD,KALd,SAAoBkF,GAChB,IAAMW,EAAW3G,EAAYgG,EAAM/F,KAAM+F,EAAM9F,QAC/C,OAAO,uCAAIyG,GAAaX,GAAxB,IAA+BtF,KAAMiG,EAASjG,UYtCbkG,CAAqBJ,MAA1D,mBAAOlC,EAAP,KAAeuC,EAAf,KAgCA,OACI,qBAAK5H,UAAU,MAAf,SACI,eAACP,EAAcoI,SAAf,CAAwB5H,MAAO,CAC3BoF,SACAxF,WA9BZ,SAAoBS,GAChB,GAAIP,EAAW,CACX,IAAMgH,EAAQhG,EAAYhB,EAAWsF,EAAOC,OAAS,GACrDsC,EAAU,CAACb,GAAF,mBAAY1B,KACrBiC,EAA2BP,GAC3BU,EAAa,MA0BT3H,YAnCZ,SAAqBQ,GACjBmH,EAAanH,EAAEoE,cAAczE,QAmCrBF,YACAuG,cAxBZ,SAAuBS,GACnB,GAAIA,EAAO,CACP1D,QAAQ4B,IAAI,mBAAoB8B,GAChC,IAAMe,EZ0BX,SAAqB7G,EAAgBf,EAAYmF,GACpD,IAAMY,EAAQZ,EAAO0C,WAAU,SAAAhB,GAAK,OAAIA,EAAM7G,KAAOA,GAAM6G,EAAM9F,SAAWA,KAE5E,OADAoC,QAAQ4B,IAAR,oBAAyBnC,KAAKE,UAAUqC,EAAOY,GAAQ,KAAM,KACvD,GAAN,mBAAWZ,EAAO2C,MAAM,EAAG/B,IAA3B,YAAsCZ,EAAO2C,MAAM/B,EAAQ,KY7BjCgC,CAAYlB,EAAM9F,OAAQ8F,EAAM7G,GAAImF,GACtDmC,IACAM,EAAUI,SAAQ,SAACnB,GAAD,OAAsBO,EAA2BP,MACnEa,EAAUE,MAaV,UAOI,wBAAQ9H,UAAU,SAAlB,SACI,oBAAIA,UAAU,QAAd,SAAsB,mBAAGuF,KAAK,cAAR,4BAE1B,0BAASvF,UAAU,UAAnB,UACI,cAACL,EAAD,IACA,cAACyH,EAAD,OAEJ,yBAAQpH,UAAU,SAAlB,UACI,sBAAKA,UAAU,WAAf,UACI,qFACA,cAACoF,EAAD,IACA,cAACvB,EAAD,CAAWG,QAAS,CAACD,WA3BzC,SAAoBZ,GAChB,IAAMgF,EZHP,SAAoCC,EAAcC,GACrD,IAAIC,EAAMF,EAAQG,QAAO,SAAC1B,EAAWE,GAEjC,OADC,2BAAOF,GAAP,4BAAcE,EAAM7G,IAAO6G,MAE7B,IAKH,OAJAuB,EAAMD,EAAQE,QAAO,SAAC1B,EAAWE,GAE7B,OADC,2BAAOF,GAAP,4BAAcE,EAAM7G,IAAO6G,MAE7BuB,GACIE,OAAO3F,OAAOyF,GYNQG,CAAiBpD,EAAQlC,GAClDqE,IACAW,EAAiBD,SAAQ,SAACnB,GAAD,OAAsBO,EAA2BP,MAC1Ea,EAAUO,UAyBE,uCACA,6EC3DLO,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.1f3df8ac.chunk.js","sourcesContent":["import {createContext, FormEvent, SyntheticEvent} from \"react\";\nimport {LifeStamp} from \"../../lib/stamps.utils\";\n\ntype LifeStampContextT = {\n    stamps: LifeStamp[],\n    onTextInput: (e: FormEvent<HTMLTextAreaElement>) => void,\n    onAddStamp: (e: SyntheticEvent<HTMLButtonElement, Event>) => void,\n    textValue: string,\n    onDeleteStamp: (stamp: LifeStamp) => void\n}\nconst StampsContext = createContext({} as LifeStampContextT);\n\nexport {StampsContext};\nexport type {LifeStampContextT};\n","import React from \"react\";\nimport {StampsContext} from \"./contexts/StampsContext.contexts\";\n\nexport default function AddText() {\n    return (\n        <StampsContext.Consumer>\n            {({onAddStamp, onTextInput, textValue}) => {\n                return (\n                    <div className=\"add-text-container\">\n                        <textarea\n                            value={textValue}\n                            id=\"add-text\"\n                            name=\"add-text\"\n                            placeholder=\"enter text here\"\n                            onInput={(e) => onTextInput(e)}\n                        />\n                        <button id=\"add-text-btn\" onClick={onAddStamp}>+</button>\n                    </div>\n                );\n            }}\n        </StampsContext.Consumer>\n    );\n}\n","import {v4 as guid} from 'uuid';\n\nexport type LifeStamp = {\n    note: string,\n    ts: string,\n    id: string,\n    created_at: number;\n    updated_at: number;\n    serial: number;\n    type: string;\n    tags?: string[]\n}\n\nfunction formattedTimeStamp() {\n    const d = new Date().toJSON();\n    const [day, timeString] = d.split('T');\n    const time = timeString.split('.')[0];\n    return `${day.replace(/-/g, '.')} ${time}`;\n}\n\nexport default function createStamp(note: string, serial: number): LifeStamp {\n    const dts: number = Date.now();\n    return {\n        note,\n        ts: formattedTimeStamp(),\n        id: guid(),\n        created_at: dts,\n        updated_at: dts,\n        serial,\n        type: 'LifeStamp',\n        tags: createTags(note)\n    };\n}\n\nfunction createTags(note: string): string[] {\n    const tags = (note.match(/^#[A-Za-z0-9-_]+|\\W#[A-Za-z0-9-_]+/g) || []);\n    const trimmed = tags.map((w: string) => w.trim());\n    const lowered = trimmed.map(w => w.toLocaleLowerCase());\n    return Array.from(new Set(lowered));\n}\n\nexport function merge<T extends LifeStamp>(stampsA: T[], stampsB: T[]) {\n    let obj = stampsA.reduce((a: Object, stamp: T) => {\n        a = {...a, [`${stamp.id}`]: stamp};\n        return a;\n    }, {});\n    obj = stampsB.reduce((a: Object, stamp: T) => {\n        a = {...a, [`${stamp.id}`]: stamp};\n        return a;\n    }, obj);\n    return Object.values(obj);\n}\n\nexport function upgradeStampsVersion(stamps: LifeStamp[]): LifeStamp[] {\n    function cloneStamp(stamp: LifeStamp): LifeStamp {\n        const newStamp = createStamp(stamp.note, stamp.serial);\n        return {...newStamp, ...stamp, tags: newStamp.tags};\n    }\n\n    return stamps.map(cloneStamp);\n}\n\nexport function deleteStamp(serial: number, id: string, stamps: LifeStamp[]): LifeStamp[] {\n    const index = stamps.findIndex(stamp => stamp.id === id && stamp.serial === serial);\n    console.log(`deleting: ${JSON.stringify(stamps[index], null, 4)}`);\n    return [...stamps.slice(0, index), ...stamps.slice(index + 1)];\n}\n","function featureAvailable() {\n    if (typeof localStorage !== 'undefined') {\n        try {\n            localStorage.setItem('feature_test', 'yes');\n            if (localStorage.getItem('feature_test') === 'yes') {\n                localStorage.removeItem('feature_test');\n                // localStorage is enabled\n                return true;\n            } else {\n                // localStorage is disabled\n                return false;\n            }\n        } catch (e) {\n            // localStorage is disabled\n            return false;\n        }\n    } else {\n        // localStorage is not available\n        return false;\n    }\n}\n\nfunction exists(key: string) {\n    if (featureAvailable()) {\n        return localStorage.getItem(key) !== null;\n    }\n}\n\nfunction unshift<T>(key: string, value: T) {\n    if (featureAvailable()) {\n        if (exists(key)) {\n            const _values = localStorage.getItem(key);\n            if (_values) {\n                let values = JSON.parse(_values as string);\n                values.unshift(value);\n                localStorage.setItem(key, JSON.stringify(values));\n                return;\n            }\n        }\n        const values = [value];\n        localStorage.setItem(key, JSON.stringify(values));\n    }\n}\n\nfunction append<T>(key: string, value: T) {\n    if (featureAvailable()) {\n        if (exists(key)) {\n            let values = JSON.parse(localStorage.getItem(key) as string);\n            values.push(value);\n            localStorage.setItem(key, JSON.stringify(values));\n        } else {\n            const values = [value];\n            localStorage.setItem(key, JSON.stringify(values));\n        }\n    }\n}\n\nfunction set(key: string, value: string) {\n    if (featureAvailable()) {\n        localStorage.setItem(key, value);\n    }\n}\n\nfunction get(key: string) {\n    return featureAvailable() ? localStorage.getItem(key) : 'no localStorage';\n}\n\nfunction remove(key: string) {\n    if (featureAvailable() && exists(key)) {\n        localStorage.removeItem(key);\n    }\n}\n\nexport {exists, featureAvailable, get, set, append, remove, unshift};\n","import {append, get, remove, unshift} from \"../../lib/localStorge.utils\";\n\nexport default function useLocalList<T>(key: string) {\n    function push(value: T) {\n        append<T>(key, value);\n    }\n\n    function addAtBeginning<T>(value: T) {\n        unshift<T>(key, value);\n    }\n\n    function fetch<T>(): T[] {\n        let data: T[] = [];\n        try {\n            data = JSON.parse(get(key) as string || '') || [] as T[];\n        } catch (e: any) {\n            console.error(e?.message);\n        } finally {\n            return data;\n        }\n    }\n\n    function clear() {\n        remove(key);\n    }\n\n    return {push, fetch, clear, addAtBeginning};\n}\n","export default __webpack_public_path__ + \"static/media/file_upload_white_24dp.efa74fb3.svg\";","import React, {SyntheticEvent} from \"react\";\n\nimport uploadIcon from '../icons/file_upload_white_24dp.svg';\n\nexport default function InputFile(props: any) {\n    const {onFileRead} = props.actions;\n\n    function onFile(e: SyntheticEvent<HTMLInputElement>) {\n        const file = e?.currentTarget?.files?.[0];\n        const reader = new FileReader();\n        reader.onload = function (e) {\n            const data = JSON.parse(e!.target!.result as string);\n            onFileRead(data);\n            console.log(data);\n        };\n        reader.readAsText(file!, 'utf-8');\n    }\n\n    return (\n        <label htmlFor=\"upload\" style={{cursor: 'pointer'}} className=\"upload-control\">\n            <img src={uploadIcon} alt=\"upload previously downloaded json.\"/>\n            <input\n                type=\"file\"\n                id=\"upload\"\n                name=\"upload\"\n                accept=\"application/json\"\n                onChange={onFile}\n                style={{display: 'none'}}\n            />\n        </label>\n\n    );\n}\n","export default __webpack_public_path__ + \"static/media/file_download_white_24dp.e46f4fb0.svg\";","import React from 'react';\nimport downloadFile from \"../icons/file_download_white_24dp.svg\";\nimport {StampsContext} from \"./contexts/StampsContext.contexts\";\n\nexport default function DownloadFile() {\n    return <StampsContext.Consumer>\n        {({stamps}) => <>{\n            stamps.length > 0 &&\n            <a\n                href={`data:text/json;charset=utf-8,${encodeURIComponent(JSON.stringify(stamps, null, 4))}`}\n                download={`lifestamps-${new Date().toLocaleDateString()}.json`}\n                className=\"download-control\"\n            >\n                <img src={downloadFile} alt=\"download your lifestamps as json\"/>\n            </a>\n        }\n        </>\n        }\n    </StampsContext.Consumer>;\n}","export default __webpack_public_path__ + \"static/media/delete_black_24dp.1129c53a.svg\";","import React, {Dispatch, SetStateAction} from \"react\";\nimport ReactMarkdown from \"react-markdown\";\nimport Delete from '../../icons/delete_black_24dp.svg';\n\nexport type StampListItemType = {\n    note: string;\n    ts: string;\n    _key: string;\n    tags?: string[];\n    id: string;\n    setFilterTag: Dispatch<SetStateAction<string>>;\n    onDelete: (id: string) => void;\n}\n\nexport function StampListItem({id, note, ts, _key, tags, setFilterTag, onDelete}: StampListItemType) {\n    return <div className=\"stamp\" key={_key}>\n        <div className=\"ts\">\n            {ts}\n        </div>\n        <div className=\"note\">\n            <ReactMarkdown>{note}</ReactMarkdown>\n        </div>\n        {tags && tags?.length > 0 &&\n        <div className=\"tags\">\n            {tags\n                .map((tag: string, index: number) =>\n                    <span className=\"tag\" key={`key-tag-${index}`} onClick={() => setFilterTag(tag)}>{tag}</span>)\n            }\n        </div>\n        }\n        <div className=\"stamp-actions\">\n            <span className=\"delete-btn btn\" onClick={() => onDelete(id)}><img src={Delete}\n                                                                               alt={\"delete stamp\"}/></span>\n        </div>\n    </div>;\n}","import React, {Dispatch, SetStateAction} from \"react\";\n\nexport type CurrentFilterType = {\n    filterTag: string;\n    setFilterTag: Dispatch<SetStateAction<string>>\n}\n\nexport function CurrentFilter(props: CurrentFilterType) {\n    const {filterTag, setFilterTag} = props;\n\n    return <>\n        {filterTag &&\n        <div className=\"filter-close\" onClick={() => {\n            setFilterTag('');\n        }}>clear {filterTag}</div>}\n    </>;\n}\n","import React, {useState} from \"react\";\nimport {LifeStamp} from \"../../lib/stamps.utils\";\nimport {StampListItem, StampListItemType} from \"./StampListItem\";\nimport {CurrentFilter} from \"./CurrentFilter\";\n\nexport default function ListStamps({stamps, onDeleteStamp}: { stamps: LifeStamp[], onDeleteStamp: (stamp: LifeStamp) => void }) {\n    const [filterTag, setFilterTag] = useState('');\n\n    function getListItems(_stamps: LifeStamp[]): StampListItemType[] {\n        const items = _stamps && _stamps.length > 0 ?\n            _stamps\n                .sort((a, b) => b.created_at - a.created_at)\n                .map((stamp: LifeStamp, i: number) => ({\n                    note: stamp.note,\n                    ts: stamp.ts,\n                    _key: `list-item-${i}`,\n                    tags: stamp.tags,\n                    id: stamp.id,\n                    setFilterTag,\n                    onDelete\n                }))\n            : [];\n        return filterTag ? items.filter(i => i.tags?.includes(filterTag)) : items;\n    }\n\n    function onDelete(id: string) {\n        onDeleteStamp(stamps.find(s => s.id === id) as LifeStamp);\n    }\n\n    return <>\n        <CurrentFilter filterTag={filterTag} setFilterTag={setFilterTag}/>\n        <div className=\"stamps\" key={'stamps'}>\n            {\n                getListItems(stamps)\n                    .map((values: StampListItemType) =>\n                        <StampListItem\n                            {...values}\n                            key={`${values._key}-container`}\n                        />\n                    )\n            }\n        </div>\n    </>;\n}\n\n","import {StampsContext} from \"../contexts/StampsContext.contexts\";\nimport React from \"react\";\nimport ListStamps from \"./ListStamps\";\n\nexport function StampsContainer() {\n    return <StampsContext.Consumer>\n        {\n            ({stamps, onDeleteStamp}) => <ListStamps\n                key=\"lifestamps-container\"\n                stamps={stamps}\n                onDeleteStamp={onDeleteStamp}\n            />\n        }\n    </StampsContext.Consumer>;\n}","import React, {FormEvent, SyntheticEvent, useState} from 'react';\nimport './App.css';\nimport AddText from \"./components/AddText\";\nimport createStamp, {deleteStamp, LifeStamp, merge, upgradeStampsVersion} from \"./lib/stamps.utils\";\nimport useLocalList from \"./components/hooks/localStorage.hook\";\nimport InputFile from \"./components/InputFile\";\nimport DownloadFile from \"./components/DownloadFile\";\nimport {StampsContext} from './components/contexts/StampsContext.contexts';\nimport {StampsContainer} from \"./components/Stamps/StampsContainer\";\n\nfunction App() {\n    const {\n        addAtBeginning: addStampToLocal,\n        fetch: fetchStampsFromLocal,\n        clear: clearStampsFromLocal\n    } = useLocalList('LIFESTAMPS');\n\n    const [textValue, setTextValue] = useState('');\n    const [stamps, setStamps] = useState(upgradeStampsVersion(fetchStampsFromLocal<LifeStamp>()));\n\n    function onTextInput(e: FormEvent<HTMLTextAreaElement>) {\n        setTextValue(e.currentTarget.value);\n    }\n\n    function onAddStamp(e: SyntheticEvent<HTMLButtonElement>) {\n        if (textValue) {\n            const stamp = createStamp(textValue, stamps.length + 1);\n            setStamps([stamp, ...stamps]);\n            addStampToLocal<LifeStamp>(stamp);\n            setTextValue('');\n        }\n    }\n\n    function onDeleteStamp(stamp: LifeStamp) {\n        if (stamp) {\n            console.log('deleting a stamp', stamp);\n            const newStamps = deleteStamp(stamp.serial, stamp.id, stamps);\n            clearStampsFromLocal();\n            newStamps.forEach((stamp: LifeStamp) => addStampToLocal<LifeStamp>(stamp));\n            setStamps(newStamps);\n        }\n    }\n\n    function onFileRead(data: LifeStamp[]) {\n        const mergedLifeStamps = merge<LifeStamp>(stamps, data);\n        clearStampsFromLocal();\n        mergedLifeStamps.forEach((stamp: LifeStamp) => addStampToLocal<LifeStamp>(stamp));\n        setStamps(mergedLifeStamps);\n    }\n\n    return (\n        <div className=\"App\">\n            <StampsContext.Provider value={{\n                stamps,\n                onAddStamp,\n                onTextInput,\n                textValue,\n                onDeleteStamp,\n            }}>\n                <header className=\"header\">\n                    <h2 className=\"brand\"><a href=\"/lifestamps\">LifeStamps</a></h2>\n                </header>\n                <section className=\"content\">\n                    <AddText/>\n                    <StampsContainer/>\n                </section>\n                <footer className=\"footer\">\n                    <div className=\"controls\">\n                        <>JSON: (you can download and upload your data)</>\n                        <DownloadFile/>\n                        <InputFile actions={{onFileRead}}/>\n                    </div>\n                    <div>&nbsp;</div>\n                    <h6>lifestamps by anubhav | 0.32.0-150</h6>\n                </footer>\n            </StampsContext.Provider>\n        </div>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}