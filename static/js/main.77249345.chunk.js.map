{"version":3,"sources":["components/contexts/StampsContext.contexts.tsx","components/AddText.tsx","lib/stamps.utils.ts","lib/localStorge.utils.ts","components/hooks/localStorage.hook.ts","icons/file_upload_white_24dp.svg","components/InputFile.tsx","icons/file_download_white_24dp.svg","components/DownloadFile.tsx","icons/delete_black_24dp.svg","icons/favorite_border_black_24dp.svg","icons/favorite_black_24dp.svg","components/Stamps/StampAction.tsx","components/Stamps/StampListItem.tsx","components/Stamps/CurrentFilter.tsx","components/Stamps/ListStamps.tsx","components/Stamps/StampsContainer.tsx","components/Tags/TagDropdown.tsx","App.tsx","lib/string.utils.ts","reportWebVitals.ts","index.tsx"],"names":["StampsContext","createContext","AddText","Consumer","onAddStamp","onTextInput","textValue","className","value","id","name","placeholder","onInput","e","rows","onClick","formattedTimeStamp","Date","toJSON","split","day","time","replace","createStamp","note","serial","dts","now","ts","guid","created_at","updated_at","type","tags","createTags","favorite","sha1","lowered","match","map","w","trim","toLocaleLowerCase","Array","from","Set","featureAvailable","localStorage","setItem","getItem","removeItem","exists","key","useLocalList","push","values","JSON","parse","stringify","append","fetch","data","get","console","error","message","clear","remove","addAtBeginning","_values","unshift","InputFile","props","onFileRead","actions","htmlFor","style","cursor","src","uploadIcon","alt","accept","onChange","file","currentTarget","files","reader","FileReader","onload","target","result","log","readAsText","display","DownloadFile","stamps","length","href","encodeURIComponent","download","toLocaleDateString","downloadFile","StampAction","classes","children","StampListItem","_key","setFilter","onDelete","onToggle","tag","index","Delete","Favorite","UnFavorite","CurrentFilter","filter","ListStamps","onDeleteStamp","onToggleFavorite","searchTerm","find","s","_stamps","items","sort","a","b","stamp","i","filtered","includes","getListItems","StampsContainer","search","TagContainer","TagDropdown","sorted","reduce","c","localeCompare","defaultValue","title","label","selected","slice","App","addStampToLocal","fetchStampsFromLocal","clearStampsFromLocal","useState","newNoteValue","setNewNoteValue","setStamps","setSearch","useEffect","newStamps","newStamp","upgradeStampsVersion","forEach","onLoad","Provider","findIndex","deleteStamp","obj","toggleFavorite","mergedLifeStamps","stampsA","stampsB","Object","merge","process","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.77249345.chunk.js","sourcesContent":["import {createContext, FormEvent, SyntheticEvent} from \"react\";\nimport {LifeStamp} from \"../../lib/stamps.utils\";\n\ntype LifeStampContextT = {\n    stamps: LifeStamp[],\n    onTextInput: (e: FormEvent<HTMLTextAreaElement>) => void,\n    onAddStamp: (e: SyntheticEvent<HTMLButtonElement, Event>) => void,\n    textValue: string,\n    onDeleteStamp: (stamp: LifeStamp) => void,\n    onToggleFavorite: (stamp: LifeStamp) => void,\n    search: string;\n    filter: string;\n    setFilter: React.Dispatch<React.SetStateAction<string>>\n}\nconst StampsContext = createContext({} as LifeStampContextT);\n\nexport {StampsContext};\nexport type {LifeStampContextT};\n","import React from \"react\";\nimport {StampsContext} from \"./contexts/StampsContext.contexts\";\n\nexport default function AddText() {\n    return (\n        <StampsContext.Consumer>\n            {({onAddStamp, onTextInput, textValue}) => {\n                return (\n                    <div className=\"add-text-container\">\n                        <textarea\n                            value={textValue}\n                            id=\"add-text\"\n                            name=\"add-text\"\n                            placeholder=\"enter text here\"\n                            onInput={(e) => onTextInput(e)}\n                            rows={7}\n                        />\n                        <button id=\"add-text-btn\" onClick={onAddStamp}>+</button>\n                    </div>\n                );\n            }}\n        </StampsContext.Consumer>\n    );\n}\n","import {v4 as guid} from 'uuid';\nimport {jstr} from \"./string.utils\";\nimport sha1 from 'sha1';\n\nexport type LifeStamp = {\n    note: string,\n    ts: string,\n    id: string,\n    created_at: number;\n    updated_at: number;\n    serial: number;\n    type: string;\n    tags?: string[];\n    favorite?: boolean;\n    sha1?: string;\n}\n\nfunction formattedTimeStamp() {\n    const d = new Date().toJSON();\n    const [day, timeString] = d.split('T');\n    const time = timeString.split('.')[0];\n    return `${day.replace(/-/g, '.')} ${time}`;\n}\n\nexport default function createStamp(note: string, serial: number): LifeStamp {\n    const dts: number = Date.now();\n    return {\n        note,\n        ts: formattedTimeStamp(),\n        id: guid(),\n        created_at: dts,\n        updated_at: dts,\n        serial,\n        type: 'LifeStamp',\n        tags: createTags(note),\n        favorite: false,\n        sha1: sha1(note)\n    };\n}\n\nfunction createTags(note: string): string[] {\n    const tags = (note.match(/^#[A-Za-z0-9-_]+|\\W#[A-Za-z0-9-_]+/g) || []);\n    const trimmed = tags.map((w: string) => w.trim());\n    const lowered = trimmed.map(w => w.toLocaleLowerCase());\n    return Array.from(new Set(lowered));\n}\n\nexport function merge<T extends LifeStamp>(stampsA: T[], stampsB: T[]) {\n    let obj = stampsA.reduce((a: Object, stamp: T) => {\n        a = {...a, [`${stamp.id}`]: stamp};\n        return a;\n    }, {});\n    obj = stampsB.reduce((a: Object, stamp: T) => {\n        a = {...a, [`${stamp.id}`]: stamp};\n        return a;\n    }, obj);\n    return Object.values(obj);\n}\n\nexport function upgradeStampsVersion(stamps: LifeStamp[]): LifeStamp[] {\n    function cloneStamp(stamp: LifeStamp): LifeStamp {\n        const newStamp = createStamp(stamp.note, stamp.serial);\n        return {...newStamp, ...stamp, tags: newStamp.tags, sha1: newStamp.sha1};\n    }\n\n    return stamps.map(cloneStamp);\n}\n\nexport function deleteStamp(serial: number, id: string, stamps: LifeStamp[]): LifeStamp[] {\n    const index = stamps.findIndex(stamp => stamp.id === id && stamp.serial === serial);\n    // console.log(`deleteStamp`, jstr(stamps[index]));\n    return [...stamps.slice(0, index), ...stamps.slice(index + 1)];\n}\n\nexport function toggleFavorite(serial: number, id: string, stamps: LifeStamp[]): LifeStamp[] {\n    const index = stamps.findIndex(stamp => stamp.id === id && stamp.serial === serial);\n    // console.log(`toggleFavorite`, jstr(stamps[index]));\n    stamps[index].favorite = !stamps[index].favorite;\n    return [...stamps];\n}\n","function featureAvailable() {\n    if (typeof localStorage !== 'undefined') {\n        try {\n            localStorage.setItem('feature_test', 'yes');\n            if (localStorage.getItem('feature_test') === 'yes') {\n                localStorage.removeItem('feature_test');\n                // localStorage is enabled\n                return true;\n            } else {\n                // localStorage is disabled\n                return false;\n            }\n        } catch (e) {\n            // localStorage is disabled\n            return false;\n        }\n    } else {\n        // localStorage is not available\n        return false;\n    }\n}\n\nfunction exists(key: string) {\n    if (featureAvailable()) {\n        return localStorage.getItem(key) !== null;\n    }\n}\n\nfunction unshift<T>(key: string, value: T) {\n    if (featureAvailable()) {\n        if (exists(key)) {\n            const _values = localStorage.getItem(key);\n            if (_values) {\n                let values = JSON.parse(_values as string);\n                values.unshift(value);\n                localStorage.setItem(key, JSON.stringify(values));\n                return;\n            }\n        }\n        const values = [value];\n        localStorage.setItem(key, JSON.stringify(values));\n    }\n}\n\nfunction append<T>(key: string, value: T) {\n    if (featureAvailable()) {\n        if (exists(key)) {\n            let values = JSON.parse(localStorage.getItem(key) as string);\n            values.push(value);\n            localStorage.setItem(key, JSON.stringify(values));\n        } else {\n            const values = [value];\n            localStorage.setItem(key, JSON.stringify(values));\n        }\n    }\n}\n\nfunction set(key: string, value: string) {\n    if (featureAvailable()) {\n        localStorage.setItem(key, value);\n    }\n}\n\nfunction get(key: string) {\n    return featureAvailable() ? localStorage.getItem(key) : 'no localStorage';\n}\n\nfunction remove(key: string) {\n    if (featureAvailable() && exists(key)) {\n        localStorage.removeItem(key);\n    }\n}\n\nexport {exists, featureAvailable, get, set, append, remove, unshift};\n","import {append, get, remove, unshift} from \"../../lib/localStorge.utils\";\n\nexport default function useLocalList<T>(key: string) {\n    function push(value: T) {\n        append<T>(key, value);\n    }\n\n    function addAtBeginning<T>(value: T) {\n        unshift<T>(key, value);\n    }\n\n    function fetch<T>(): T[] {\n        let data: T[] = [];\n        try {\n            data = JSON.parse(get(key) as string || '') || [] as T[];\n        } catch (e: any) {\n            console.error(e?.message);\n        } finally {\n            return data;\n        }\n    }\n\n    function clear() {\n        remove(key);\n    }\n\n    return {push, fetch, clear, addAtBeginning};\n}\n","export default __webpack_public_path__ + \"static/media/file_upload_white_24dp.efa74fb3.svg\";","import React, {SyntheticEvent} from \"react\";\n\nimport uploadIcon from '../icons/file_upload_white_24dp.svg';\n\nexport default function InputFile(props: any) {\n    const {onFileRead} = props.actions;\n\n    function onFile(e: SyntheticEvent<HTMLInputElement>) {\n        const file = e?.currentTarget?.files?.[0];\n        const reader = new FileReader();\n        reader.onload = function (e) {\n            const data = JSON.parse(e!.target!.result as string);\n            onFileRead(data);\n            console.log(data);\n        };\n        reader.readAsText(file!, 'utf-8');\n    }\n\n    return (\n        <label htmlFor=\"upload\" style={{cursor: 'pointer'}} className=\"upload-control\">\n            <img src={uploadIcon} alt=\"upload previously downloaded json.\"/>\n            <input\n                type=\"file\"\n                id=\"upload\"\n                name=\"upload\"\n                accept=\"application/json\"\n                onChange={onFile}\n                style={{display: 'none'}}\n            />\n        </label>\n\n    );\n}\n","export default __webpack_public_path__ + \"static/media/file_download_white_24dp.e46f4fb0.svg\";","import React from 'react';\nimport downloadFile from \"../icons/file_download_white_24dp.svg\";\nimport {StampsContext} from \"./contexts/StampsContext.contexts\";\n\nexport default function DownloadFile() {\n    return <StampsContext.Consumer>\n        {({stamps}) => <>{\n            stamps.length > 0 &&\n            <a\n                href={`data:text/json;charset=utf-8,${encodeURIComponent(JSON.stringify(stamps, null, 4))}`}\n                download={`lifestamps-${new Date().toLocaleDateString()}.json`}\n                className=\"download-control\"\n            >\n                <img src={downloadFile} alt=\"download your lifestamps as json\"/>\n            </a>\n        }\n        </>\n        }\n    </StampsContext.Consumer>;\n}","export default __webpack_public_path__ + \"static/media/delete_black_24dp.1129c53a.svg\";","export default __webpack_public_path__ + \"static/media/favorite_border_black_24dp.8d60aaea.svg\";","export default __webpack_public_path__ + \"static/media/favorite_black_24dp.66089a9f.svg\";","import React, {MouseEventHandler} from \"react\";\n\ntype StampActionType = {\n    classes: string;\n    onClick: MouseEventHandler<HTMLSpanElement>;\n    children: any;\n}\n\nexport function StampAction(props: StampActionType) {\n    return <span className={props.classes} onClick={props.onClick}>\n        {props.children}\n    </span>;\n}","import React, {Dispatch, SetStateAction} from \"react\";\nimport ReactMarkdown from \"react-markdown\";\nimport Delete from '../../icons/delete_black_24dp.svg';\nimport UnFavorite from '../../icons/favorite_border_black_24dp.svg';\nimport Favorite from '../../icons/favorite_black_24dp.svg';\nimport {StampAction} from \"./StampAction\";\n\nexport type StampListItemType = {\n    note: string;\n    ts: string;\n    _key: string;\n    tags?: string[];\n    id: string;\n    setFilter: Dispatch<SetStateAction<string>>;\n    onDelete: (id: string) => void;\n    onToggle: (id: string) => void;\n    favorite?: boolean;\n}\n\nexport function StampListItem(props: StampListItemType) {\n    const {\n        id,\n        note,\n        ts,\n        _key,\n        tags,\n        setFilter,\n        onDelete,\n        onToggle,\n        favorite\n    } = props;\n    return <div className=\"stamp\" key={_key}>\n        <div className=\"ts\">\n            {ts}\n        </div>\n        <div className=\"note\">\n            <ReactMarkdown>{note}</ReactMarkdown>\n        </div>\n        {tags && tags?.length > 0 &&\n        <div className=\"tags\">\n            {tags\n                .map((tag: string, index: number) =>\n                    <span className=\"tag\" key={`key-tag-${index}`} onClick={() => setFilter(tag)}>{tag}</span>)\n            }\n        </div>\n        }\n        <div className=\"stamp-actions\">\n            <StampAction classes={\"delete-btn btn\"} onClick={() => onDelete(id)}>\n                <img src={Delete} alt={\"delete stamp\"}/>\n            </StampAction>\n            <StampAction classes={`favorite-btn btn ${favorite ? 'fav' : 'unfav'}`} onClick={() => onToggle(id)}>\n                <img src={favorite ? Favorite : UnFavorite} alt={\"favorite this stamp\"}/>\n            </StampAction>\n        </div>\n    </div>;\n}\n","import React, {Dispatch, SetStateAction} from \"react\";\n\nexport type CurrentFilterType = {\n    filter: string;\n    setFilter: Dispatch<SetStateAction<string>>\n}\n\nexport function CurrentFilter(props: CurrentFilterType) {\n    const {filter, setFilter} = props;\n\n    return <>\n        {filter &&\n        <div className=\"filter-close\" onClick={() => {\n            setFilter('');\n        }}>clear {filter}</div>}\n    </>;\n}\n","import React, {useState} from \"react\";\nimport {LifeStamp} from \"../../lib/stamps.utils\";\nimport {StampListItem, StampListItemType} from \"./StampListItem\";\nimport {CurrentFilter} from \"./CurrentFilter\";\n\ntype ListStampsType = {\n    stamps: LifeStamp[];\n    onDeleteStamp: (stamp: LifeStamp) => void;\n    onToggleFavorite: (stamp: LifeStamp) => void;\n    searchTerm: string;\n    filter: string;\n    setFilter: React.Dispatch<React.SetStateAction<string>>\n}\n\nexport default function ListStamps(props: ListStampsType) {\n    const {\n        stamps,\n        onDeleteStamp,\n        onToggleFavorite,\n        searchTerm,\n        filter,\n        setFilter\n    } = props;\n\n    function getListItems(_stamps: LifeStamp[]): StampListItemType[] {\n        const items = _stamps && _stamps.length > 0 ?\n            _stamps\n                .sort((a, b) => b.created_at - a.created_at)\n                .map((stamp: LifeStamp, i: number) => ({\n                    note: stamp.note,\n                    ts: stamp.ts,\n                    _key: `list-item-${i}`,\n                    tags: stamp.tags,\n                    id: stamp.id,\n                    setFilter,\n                    onDelete,\n                    onToggle,\n                    favorite: stamp.favorite\n                }))\n            : [];\n        const filtered = filter ? items.filter(i => i.tags?.includes(filter)) : items;\n        if (_stamps.length > 0 && filtered.length === 0) {\n            setFilter('');\n            return items;\n        }\n        const searched = searchTerm ? filtered.filter(i => i.note.toLocaleLowerCase().includes(searchTerm)) : filtered;\n        return searched;\n    }\n\n    function onDelete(id: string) {\n        onDeleteStamp(stamps.find(s => s.id === id) as LifeStamp);\n    }\n\n    function onToggle(id: string) {\n        onToggleFavorite(stamps.find(s => s.id === id) as LifeStamp);\n    }\n\n    return <>\n        <CurrentFilter filter={filter} setFilter={setFilter}/>\n        <div className=\"stamps\" key={'stamps'}>\n            {\n                getListItems(stamps)\n                    .map((values: StampListItemType) =>\n                        <StampListItem\n                            {...values}\n                            key={`${values._key}-container`}\n                        />\n                    )\n            }\n        </div>\n    </>;\n}\n\n","import {StampsContext} from \"../contexts/StampsContext.contexts\";\nimport React from \"react\";\nimport ListStamps from \"./ListStamps\";\n\nexport function StampsContainer() {\n    return <StampsContext.Consumer>\n        {\n            ({stamps, onDeleteStamp, onToggleFavorite, search, filter, setFilter}) =>\n                <ListStamps\n                    key=\"lifestamps-container\"\n                    stamps={stamps}\n                    onDeleteStamp={onDeleteStamp}\n                    onToggleFavorite={onToggleFavorite}\n                    searchTerm={search}\n                    filter={filter}\n                    setFilter={setFilter}\n                />\n        }\n    </StampsContext.Consumer>;\n}","import {StampsContext} from \"../contexts/StampsContext.contexts\";\nimport {LifeStamp} from \"../../lib/stamps.utils\";\n\nexport function TagContainer() {\n    return <StampsContext.Consumer>\n        {\n            ({stamps, setFilter, filter}) => {\n                return <div className=\"tag-container\">\n                    <TagDropdown stamps={[...stamps]} setFilter={setFilter} filter={filter}/>\n                </div>;\n            }\n        }\n    </StampsContext.Consumer>;\n}\n\nfunction TagDropdown(props: any) {\n    const {stamps, setFilter, filter} = props;\n    const allTags = stamps.reduce((a: string[], c: LifeStamp) => c.tags ? [...a, ...c.tags] : a, []) as string[];\n    const sorted = allTags.sort((a, b) => a.localeCompare(b));\n    const tags = Array.from(new Set<string>(sorted));\n    return (\n        <select\n            className=\"tag-select\"\n            onChange={(e) => setFilter(e.currentTarget.value)}\n        >\n            <optgroup defaultValue={''} title={'select a tag'} label={'select a tag'}>\n                <option value={''}>&nbsp;</option>\n                {\n                    tags\n                        .map((tag: string, i: number) => {\n                            return (\n                                <option\n                                    key={`option-${tag.slice(1)}-${i}`}\n                                    value={tag}\n                                    selected={filter === tag}\n                                >\n                                    {tag}\n                                </option>\n                            );\n                        })\n                })\n            </optgroup>\n        </select>\n    );\n}","import React, {FormEvent, SyntheticEvent, useEffect, useState} from 'react';\nimport './App.css';\nimport AddText from \"./components/AddText\";\nimport createStamp, {deleteStamp, LifeStamp, merge, toggleFavorite, upgradeStampsVersion} from \"./lib/stamps.utils\";\nimport useLocalList from \"./components/hooks/localStorage.hook\";\nimport InputFile from \"./components/InputFile\";\nimport DownloadFile from \"./components/DownloadFile\";\nimport {StampsContext} from './components/contexts/StampsContext.contexts';\nimport {StampsContainer} from \"./components/Stamps/StampsContainer\";\nimport {jstr} from \"./lib/string.utils\";\nimport {TagContainer} from \"./components/Tags/TagDropdown\";\n\nfunction App() {\n    const {\n        addAtBeginning: addStampToLocal,\n        fetch: fetchStampsFromLocal,\n        clear: clearStampsFromLocal\n    } = useLocalList('LIFESTAMPS');\n\n    const [newNoteValue, setNewNoteValue] = useState('');\n    const [stamps, setStamps] = useState(fetchStampsFromLocal<LifeStamp>());\n    const [search, setSearch] = useState('');\n    const [filter, setFilter] = useState('');\n    \n    useEffect(() => {\n        function onLoad() {\n            const newStamps = upgradeStampsVersion(stamps);\n            clearStampsFromLocal();\n            newStamps.forEach((stamp: LifeStamp) => addStampToLocal<LifeStamp>(stamp));\n            setStamps(newStamps);\n        }\n\n        onLoad();\n    }, []);\n\n    function onTextInput(e: FormEvent<HTMLTextAreaElement>) {\n        setNewNoteValue(e.currentTarget.value);\n    }\n\n    function onAddStamp(e: SyntheticEvent<HTMLButtonElement>) {\n        if (newNoteValue) {\n            const stamp = createStamp(newNoteValue, stamps.length + 1);\n            setStamps([stamp, ...stamps]);\n            addStampToLocal<LifeStamp>(stamp);\n            setNewNoteValue('');\n        }\n    }\n\n    function onDeleteStamp(stamp: LifeStamp) {\n        if (stamp) {\n            console.log('deleting a stamp', stamp);\n            const newStamps = deleteStamp(stamp.serial, stamp.id, stamps);\n            clearStampsFromLocal();\n            newStamps.forEach((stamp: LifeStamp) => addStampToLocal<LifeStamp>(stamp));\n            setStamps(newStamps);\n        }\n    }\n\n    function onToggleFavorite(stamp: LifeStamp) {\n        if (stamp) {\n            console.log('toggling favorite', jstr(stamp));\n            const newStamps = toggleFavorite(stamp.serial, stamp.id, stamps);\n            clearStampsFromLocal();\n            newStamps.forEach((stamp: LifeStamp) => addStampToLocal<LifeStamp>(stamp));\n            setStamps(newStamps);\n        }\n    }\n\n    function onFileRead(data: LifeStamp[]) {\n        const mergedLifeStamps = merge<LifeStamp>(stamps, data);\n        clearStampsFromLocal();\n        mergedLifeStamps.forEach((stamp: LifeStamp) => addStampToLocal<LifeStamp>(stamp));\n        setStamps(mergedLifeStamps);\n    }\n\n    function onSearchInput(e: SyntheticEvent<HTMLInputElement>) {\n        setSearch(e.currentTarget.value.toLocaleLowerCase());\n    }\n\n    return (\n        <div className=\"App\">\n            <StampsContext.Provider value={{\n                stamps,\n                onAddStamp,\n                onTextInput,\n                textValue: newNoteValue,\n                onDeleteStamp,\n                onToggleFavorite,\n                search,\n                filter,\n                setFilter\n            }}>\n                <header className=\"header\">\n                    <h2 className=\"brand\"><a href=\"/lifestamps\">LifeStamps</a></h2>\n                    <div className=\"search-container\">\n                        <input type={\"text\"} placeholder={\"search\"} onInput={onSearchInput} value={search}/>\n                    </div>\n                    <TagContainer/>\n                </header>\n                <section className=\"content\">\n                    <AddText/>\n                    <StampsContainer/>\n                </section>\n                <footer className=\"footer\">\n                    <div className=\"controls\">\n                        <>JSON: (you can download and upload your data)</>\n                        <DownloadFile/>\n                        <InputFile actions={{onFileRead}}/>\n                    </div>\n                    <div>&nbsp;</div>\n                    <h6>{process.env.REACT_APP_NAME} by anubhav | {process.env.REACT_APP_VERSION}</h6>\n                </footer>\n            </StampsContext.Provider>\n        </div>\n    );\n}\n\nexport default App;\n","export function jstr(obj: any) {\n    return JSON.stringify(obj, null, 4);\n}\n\nexport function isEmptyOrNull(str: string) {\n    return typeof str === typeof '' && (!str || str.length === 0);\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}